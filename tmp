    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.00s
     Running `target/debug/luma`
run file
└── Root
    ├── Block
    │   ├── Root
    │   │   ├── Class: Kind
    │   │   │   ├── Method: LeftParen
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(0)
    │   │   │   ├── Method: RightParen
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(1)
    │   │   │   ├── Method: LeftBracket
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(2)
    │   │   │   ├── Method: RightBracket
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(3)
    │   │   │   ├── Method: LeftBrace
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(4)
    │   │   │   ├── Method: RightBrace
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(5)
    │   │   │   ├── Method: Less
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(6)
    │   │   │   ├── Method: Greater
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(7)
    │   │   │   ├── Method: Equal
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(8)
    │   │   │   ├── Method: Plus
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(9)
    │   │   │   ├── Method: Minus
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(10)
    │   │   │   ├── Method: Slash
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(11)
    │   │   │   ├── Method: Star
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(12)
    │   │   │   ├── Method: Dot
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(13)
    │   │   │   ├── Method: Comma
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(14)
    │   │   │   ├── Method: Colon
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(15)
    │   │   │   ├── Method: SemiColon
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(16)
    │   │   │   ├── Method: Bang
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(17)
    │   │   │   ├── Method: At
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(18)
    │   │   │   ├── Method: Hash
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(19)
    │   │   │   ├── Method: Class
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(20)
    │   │   │   ├── Method: And
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(21)
    │   │   │   ├── Method: Or
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(22)
    │   │   │   ├── Method: Else
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(23)
    │   │   │   ├── Method: If
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(24)
    │   │   │   ├── Method: For
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(25)
    │   │   │   ├── Method: Nil
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(26)
    │   │   │   ├── Method: Return
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(27)
    │   │   │   ├── Method: While
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(28)
    │   │   │   ├── Method: Import
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(29)
    │   │   │   ├── Method: True
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(30)
    │   │   │   ├── Method: False
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(31)
    │   │   │   ├── Method: Def
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(32)
    │   │   │   ├── Method: Int
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(33)
    │   │   │   ├── Method: Float
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(34)
    │   │   │   ├── Method: Bool
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(35)
    │   │   │   ├── Method: Str
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(36)
    │   │   │   ├── Method: Identifier
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(37)
    │   │   │   ├── Method: String
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(38)
    │   │   │   ├── Method: Float
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(40)
    │   │   │   ├── Method: BangEqual
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(41)
    │   │   │   ├── Method: EqualEqual
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(42)
    │   │   │   ├── Method: GreaterEqual
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(43)
    │   │   │   ├── Method: LessEqual
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Int(44)
    │   │   │   └── Method: from_str
    │   │   │       └── Param: in
    │   │   │       └── Block
    │   │   │           ├── Def: kinds
    │   │   │           │   └── List
    │   │   │           │       ├── String("(")
    │   │   │           │       ├── String(")")
    │   │   │           │       ├── String("[")
    │   │   │           │       ├── String("]")
    │   │   │           │       ├── String("{")
    │   │   │           │       ├── String("}")
    │   │   │           │       ├── String("<")
    │   │   │           │       ├── String(">")
    │   │   │           │       ├── String("=")
    │   │   │           │       ├── String("+")
    │   │   │           │       ├── String("-")
    │   │   │           │       ├── String("/")
    │   │   │           │       ├── String("*")
    │   │   │           │       ├── String(".")
    │   │   │           │       ├── String(",")
    │   │   │           │       ├── String(":")
    │   │   │           │       ├── String(";")
    │   │   │           │       ├── String("!")
    │   │   │           │       ├── String("@")
    │   │   │           │       ├── String("#")
    │   │   │           │       ├── String("class")
    │   │   │           │       ├── String("and")
    │   │   │           │       ├── String("or")
    │   │   │           │       ├── String("else")
    │   │   │           │       ├── String("if")
    │   │   │           │       ├── String("for")
    │   │   │           │       ├── String("nil")
    │   │   │           │       ├── String("return")
    │   │   │           │       ├── String("while")
    │   │   │           │       ├── String("import")
    │   │   │           │       ├── String("true")
    │   │   │           │       ├── String("false")
    │   │   │           │       ├── String("def")
    │   │   │           │       ├── String("int")
    │   │   │           │       ├── String("float")
    │   │   │           │       ├── String("bool")
    │   │   │           │       └── String("str")
    │   │   │           ├── Def: i
    │   │   │           │   └── Int(0)
    │   │   │           ├── While
    │   │   │           │   ├── Less
    │   │   │           │   │   ├── GetVar(i)
    │   │   │           │   │   └── Native: len
    │   │   │           │   │       └── GetVar(kinds)
    │   │   │           │   └── Block
    │   │   │           │       ├── If
    │   │   │           │       │   ├── EqualEqual
    │   │   │           │       │   │   ├── GetVar(in)
    │   │   │           │       │   │   └── Index
    │   │   │           │       │   │       ├── GetVar(kinds)
    │   │   │           │       │   │       └── GetVar(i)
    │   │   │           │       │   └── Block
    │   │   │           │       │       └── Return
    │   │   │           │       │           └── GetVar(i)
    │   │   │           │       └── Reassign: i
    │   │   │           │           └── Plus
    │   │   │           │               ├── GetVar(i)
    │   │   │           │               └── Int(1)
    │   │   │           └── Return
    │   │   │               └── Nil
    │   │   ├── Class: Token
    │   │   │   ├── Field: value
    │   │   │   ├── Field: start
    │   │   │   ├── Field: end
    │   │   │   └── Field: kind
    │   │   ├── Class: Lexer
    │   │   │   ├── Field: code
    │   │   │   ├── Field: p
    │   │   │   ├── Method: whitespace
    │   │   │   │   └── Block
    │   │   │   │       └── While
    │   │   │   │           ├── And
    │   │   │   │           │   ├── Less
    │   │   │   │           │   │   ├── Field("p")
    │   │   │   │           │   │   └── Native: len
    │   │   │   │           │   │       └── Field("code")
    │   │   │   │           │   └── EqualEqual
    │   │   │   │           │       ├── Index
    │   │   │   │           │       │   ├── Field("code")
    │   │   │   │           │       │   └── Field("p")
    │   │   │   │           │       └── String(" ")
    │   │   │   │           └── Block
    │   │   │   │               └── SetField(p)
    │   │   │   │                   └── Plus
    │   │   │   │                       ├── Field("p")
    │   │   │   │                       └── Int(1)
    │   │   │   ├── Method: is_done
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── GreaterEqual
    │   │   │   │               ├── Field("p")
    │   │   │   │               └── Native: len
    │   │   │   │                   └── Field("code")
    │   │   │   ├── Method: letter
    │   │   │   │   └── Block
    │   │   │   │       ├── If
    │   │   │   │       │   ├── Method: is_done
    │   │   │   │       │   └── Block
    │   │   │   │       │       └── Return
    │   │   │   │       │           └── Bool(false)
    │   │   │   │       ├── Def: letters
    │   │   │   │       │   └── String("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_")
    │   │   │   │       ├── Def: i
    │   │   │   │       │   └── Int(0)
    │   │   │   │       ├── While
    │   │   │   │       │   ├── Less
    │   │   │   │       │   │   ├── GetVar(i)
    │   │   │   │       │   │   └── Native: len
    │   │   │   │       │   │       └── GetVar(letters)
    │   │   │   │       │   └── Block
    │   │   │   │       │       ├── If
    │   │   │   │       │       │   ├── EqualEqual
    │   │   │   │       │       │   │   ├── Index
    │   │   │   │       │       │   │   │   ├── GetVar(letters)
    │   │   │   │       │       │   │   │   └── GetVar(i)
    │   │   │   │       │       │   │   └── Index
    │   │   │   │       │       │   │       ├── Field("code")
    │   │   │   │       │       │   │       └── Field("p")
    │   │   │   │       │       │   └── Block
    │   │   │   │       │       │       └── Return
    │   │   │   │       │       │           └── Bool(true)
    │   │   │   │       │       └── Reassign: i
    │   │   │   │       │           └── Plus
    │   │   │   │       │               ├── GetVar(i)
    │   │   │   │       │               └── Int(1)
    │   │   │   │       └── Return
    │   │   │   │           └── Bool(false)
    │   │   │   ├── Method: digit
    │   │   │   │   └── Block
    │   │   │   │       ├── If
    │   │   │   │       │   ├── Method: is_done
    │   │   │   │       │   └── Block
    │   │   │   │       │       └── Return
    │   │   │   │       │           └── Bool(false)
    │   │   │   │       ├── Def: digits
    │   │   │   │       │   └── String("0123456789")
    │   │   │   │       ├── Def: i
    │   │   │   │       │   └── Int(0)
    │   │   │   │       ├── While
    │   │   │   │       │   ├── Less
    │   │   │   │       │   │   ├── GetVar(i)
    │   │   │   │       │   │   └── Native: len
    │   │   │   │       │   │       └── GetVar(digits)
    │   │   │   │       │   └── Block
    │   │   │   │       │       ├── If
    │   │   │   │       │       │   ├── EqualEqual
    │   │   │   │       │       │   │   ├── Index
    │   │   │   │       │       │   │   │   ├── GetVar(digits)
    │   │   │   │       │       │   │   │   └── GetVar(i)
    │   │   │   │       │       │   │   └── Index
    │   │   │   │       │       │   │       ├── Field("code")
    │   │   │   │       │       │   │       └── Field("p")
    │   │   │   │       │       │   └── Block
    │   │   │   │       │       │       └── Return
    │   │   │   │       │       │           └── Bool(true)
    │   │   │   │       │       └── Reassign: i
    │   │   │   │       │           └── Plus
    │   │   │   │       │               ├── GetVar(i)
    │   │   │   │       │               └── Int(1)
    │   │   │   │       └── Return
    │   │   │   │           └── Bool(false)
    │   │   │   ├── Method: advance
    │   │   │   │   └── Block
    │   │   │   │       └── If
    │   │   │   │           ├── Less
    │   │   │   │           │   ├── Field("p")
    │   │   │   │           │   └── Native: len
    │   │   │   │           │       └── Field("code")
    │   │   │   │           └── Block
    │   │   │   │               └── SetField(p)
    │   │   │   │                   └── Plus
    │   │   │   │                       ├── Field("p")
    │   │   │   │                       └── Int(1)
    │   │   │   ├── Method: identifier
    │   │   │   │   └── Block
    │   │   │   │       ├── Def: start
    │   │   │   │       │   └── Field("p")
    │   │   │   │       ├── Def: val
    │   │   │   │       │   └── String("")
    │   │   │   │       ├── While
    │   │   │   │       │   ├── Method: letter
    │   │   │   │       │   └── Block
    │   │   │   │       │       ├── Reassign: val
    │   │   │   │       │       │   └── Plus
    │   │   │   │       │       │       ├── GetVar(val)
    │   │   │   │       │       │       └── Index
    │   │   │   │       │       │           ├── Field("code")
    │   │   │   │       │       │           └── Field("p")
    │   │   │   │       │       └── SetField(p)
    │   │   │   │       │           └── Plus
    │   │   │   │       │               ├── Field("p")
    │   │   │   │       │               └── Int(1)
    │   │   │   │       ├── Def: end
    │   │   │   │       │   └── Field("p")
    │   │   │   │       ├── Def: keyword
    │   │   │   │       │   └── Method: from_str
    │   │   │   │       │       ├── GetVar(val)
    │   │   │   │       │       └── GetVar(Kind)
    │   │   │   │       ├── If
    │   │   │   │       │   ├── BangEqual
    │   │   │   │       │   │   ├── GetVar(keyword)
    │   │   │   │       │   │   └── Nil
    │   │   │   │       │   └── Block
    │   │   │   │       │       └── Return
    │   │   │   │       │           └── Call: Token
    │   │   │   │       │               ├── GetVar(val)
    │   │   │   │       │               ├── GetVar(start)
    │   │   │   │       │               ├── GetVar(end)
    │   │   │   │       │               └── GetVar(keyword)
    │   │   │   │       └── Return
    │   │   │   │           └── Call: Token
    │   │   │   │               ├── GetVar(val)
    │   │   │   │               ├── GetVar(start)
    │   │   │   │               ├── GetVar(end)
    │   │   │   │               └── Method: Identifier
    │   │   │   │                   └── GetVar(Kind)
    │   │   │   ├── Method: number
    │   │   │   │   └── Block
    │   │   │   │       ├── Def: start
    │   │   │   │       │   └── Field("p")
    │   │   │   │       ├── Def: val
    │   │   │   │       │   └── String("")
    │   │   │   │       ├── Def: is_float
    │   │   │   │       │   └── Bool(false)
    │   │   │   │       ├── While
    │   │   │   │       │   ├── Or
    │   │   │   │       │   │   ├── Method: digit
    │   │   │   │       │   │   └── EqualEqual
    │   │   │   │       │   │       ├── Index
    │   │   │   │       │   │       │   ├── Field("code")
    │   │   │   │       │   │       │   └── Field("p")
    │   │   │   │       │   │       └── String(".")
    │   │   │   │       │   └── Block
    │   │   │   │       │       ├── If
    │   │   │   │       │       │   ├── EqualEqual
    │   │   │   │       │       │   │   ├── Index
    │   │   │   │       │       │   │   │   ├── Field("code")
    │   │   │   │       │       │   │   │   └── Field("p")
    │   │   │   │       │       │   │   └── String(".")
    │   │   │   │       │       │   └── Block
    │   │   │   │       │       │       └── Reassign: is_float
    │   │   │   │       │       │           └── Bool(true)
    │   │   │   │       │       ├── Reassign: val
    │   │   │   │       │       │   └── Plus
    │   │   │   │       │       │       ├── GetVar(val)
    │   │   │   │       │       │       └── Index
    │   │   │   │       │       │           ├── Field("code")
    │   │   │   │       │       │           └── Field("p")
    │   │   │   │       │       └── SetField(p)
    │   │   │   │       │           └── Plus
    │   │   │   │       │               ├── Field("p")
    │   │   │   │       │               └── Int(1)
    │   │   │   │       ├── Def: end
    │   │   │   │       │   └── Field("p")
    │   │   │   │       ├── If
    │   │   │   │       │   ├── GetVar(is_float)
    │   │   │   │       │   └── Block
    │   │   │   │       │       └── Return
    │   │   │   │       │           └── Call: Token
    │   │   │   │       │               ├── GetVar(val)
    │   │   │   │       │               ├── GetVar(start)
    │   │   │   │       │               ├── GetVar(end)
    │   │   │   │       │               └── Method: Float
    │   │   │   │       │                   └── GetVar(Kind)
    │   │   │   │       └── Return
    │   │   │   │           └── Call: Token
    │   │   │   │               ├── GetVar(val)
    │   │   │   │               ├── GetVar(start)
    │   │   │   │               ├── GetVar(end)
    │   │   │   │               └── Method: Int
    │   │   │   │                   └── GetVar(Kind)
    │   │   │   ├── Method: string
    │   │   │   │   └── Block
    │   │   │   │       ├── Def: start
    │   │   │   │       │   └── Field("p")
    │   │   │   │       ├── Def: val
    │   │   │   │       │   └── String(""")
    │   │   │   │       ├── SetField(p)
    │   │   │   │       │   └── Plus
    │   │   │   │       │       ├── Field("p")
    │   │   │   │       │       └── Int(1)
    │   │   │   │       ├── While
    │   │   │   │       │   ├── BangEqual
    │   │   │   │       │   │   ├── Index
    │   │   │   │       │   │   │   ├── Field("code")
    │   │   │   │       │   │   │   └── Field("p")
    │   │   │   │       │   │   └── String(""")
    │   │   │   │       │   └── Block
    │   │   │   │       │       ├── Reassign: val
    │   │   │   │       │       │   └── Plus
    │   │   │   │       │       │       ├── GetVar(val)
    │   │   │   │       │       │       └── Index
    │   │   │   │       │       │           ├── Field("code")
    │   │   │   │       │       │           └── Field("p")
    │   │   │   │       │       └── SetField(p)
    │   │   │   │       │           └── Plus
    │   │   │   │       │               ├── Field("p")
    │   │   │   │       │               └── Int(1)
    │   │   │   │       ├── Reassign: val
    │   │   │   │       │   └── Plus
    │   │   │   │       │       ├── GetVar(val)
    │   │   │   │       │       └── String(""")
    │   │   │   │       ├── SetField(p)
    │   │   │   │       │   └── Plus
    │   │   │   │       │       ├── Field("p")
    │   │   │   │       │       └── Int(1)
    │   │   │   │       ├── Def: end
    │   │   │   │       │   └── Field("p")
    │   │   │   │       └── Return
    │   │   │   │           └── Call: Token
    │   │   │   │               ├── GetVar(val)
    │   │   │   │               ├── GetVar(start)
    │   │   │   │               ├── GetVar(end)
    │   │   │   │               └── Method: String
    │   │   │   │                   └── GetVar(Kind)
    │   │   │   ├── Method: single_char
    │   │   │   │   └── Block
    │   │   │   │       ├── Def: a
    │   │   │   │       │   └── Method: from_str
    │   │   │   │       │       ├── Index
    │   │   │   │       │       │   ├── Field("code")
    │   │   │   │       │       │   └── Field("p")
    │   │   │   │       │       └── GetVar(Kind)
    │   │   │   │       ├── If
    │   │   │   │       │   ├── BangEqual
    │   │   │   │       │   │   ├── GetVar(a)
    │   │   │   │       │   │   └── Nil
    │   │   │   │       │   └── Block
    │   │   │   │       │       └── Return
    │   │   │   │       │           └── Call: Token
    │   │   │   │       │               ├── Index
    │   │   │   │       │               │   ├── Field("code")
    │   │   │   │       │               │   └── Field("p")
    │   │   │   │       │               ├── Field("p")
    │   │   │   │       │               ├── Plus
    │   │   │   │       │               │   ├── Field("p")
    │   │   │   │       │               │   └── Int(1)
    │   │   │   │       │               └── GetVar(a)
    │   │   │   │       └── Return
    │   │   │   │           └── Nil
    │   │   │   └── Method: next
    │   │   │       └── Block
    │   │   │           ├── If
    │   │   │           │   ├── Method: is_done
    │   │   │           │   └── Block
    │   │   │           │       └── Return
    │   │   │           │           └── Nil
    │   │   │           ├── Pop
    │   │   │           │   └── Method: whitespace
    │   │   │           ├── While
    │   │   │           │   ├── Not
    │   │   │           │   │   └── Method: is_done
    │   │   │           │   └── Block
    │   │   │           │       ├── If
    │   │   │           │       │   ├── Method: letter
    │   │   │           │       │   └── Block
    │   │   │           │       │       └── Return
    │   │   │           │       │           └── Method: identifier
    │   │   │           │       ├── If
    │   │   │           │       │   ├── Method: digit
    │   │   │           │       │   └── Block
    │   │   │           │       │       └── Return
    │   │   │           │       │           └── Method: number
    │   │   │           │       ├── Def: single_char
    │   │   │           │       │   └── Method: single_char
    │   │   │           │       ├── If
    │   │   │           │       │   ├── BangEqual
    │   │   │           │       │   │   ├── GetVar(single_char)
    │   │   │           │       │   │   └── Nil
    │   │   │           │       │   └── Block
    │   │   │           │       │       ├── SetField(p)
    │   │   │           │       │       │   └── Plus
    │   │   │           │       │       │       ├── Field("p")
    │   │   │           │       │       │       └── Int(1)
    │   │   │           │       │       └── Return
    │   │   │           │       │           └── GetVar(single_char)
    │   │   │           │       ├── If
    │   │   │           │       │   ├── EqualEqual
    │   │   │           │       │   │   ├── Index
    │   │   │           │       │   │   │   ├── Field("code")
    │   │   │           │       │   │   │   └── Field("p")
    │   │   │           │       │   │   └── String(""")
    │   │   │           │       │   └── Block
    │   │   │           │       │       └── Return
    │   │   │           │       │           └── Method: string
    │   │   │           │       └── Pop
    │   │   │           │           └── Method: advance
    │   │   │           └── Return
    │   │   │               └── Nil
    │   │   └── Class: Peekable
    │   │       ├── Field: item
    │   │       ├── Field: peek_item
    │   │       ├── Method: next
    │   │       │   └── Block
    │   │       │       ├── If
    │   │       │       │   ├── BangEqual
    │   │       │       │   │   ├── Field("peek_item")
    │   │       │       │   │   └── Nil
    │   │       │       │   └── Block
    │   │       │       │       ├── Def: temp
    │   │       │       │       │   └── Field("peek_item")
    │   │       │       │       ├── SetField(peek_item)
    │   │       │       │       │   └── Nil
    │   │       │       │       └── Return
    │   │       │       │           └── GetVar(temp)
    │   │       │       └── Return
    │   │       │           └── Method: next
    │   │       │               └── Field("item")
    │   │       └── Method: peek
    │   │           └── Block
    │   │               ├── If
    │   │               │   ├── EqualEqual
    │   │               │   │   ├── Field("peek_item")
    │   │               │   │   └── Nil
    │   │               │   └── Block
    │   │               │       └── SetField(peek_item)
    │   │               │           └── Method: next
    │   │               │               └── Field("item")
    │   │               └── Return
    │   │                   └── Field("peek_item")
    │   ├── Root
    │   │   ├── Class: AstRoot
    │   │   │   ├── Field: nodes
    │   │   │   └── Method: accept
    │   │   │       └── Param: visitor
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── Method: visitAstRoot
    │   │   │                   ├── GetSelf
    │   │   │                   └── GetVar(visitor)
    │   │   ├── Class: AstNeg
    │   │   │   ├── Field: expr
    │   │   │   └── Method: accept
    │   │   │       └── Param: visitor
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── Method: visitAstNeg
    │   │   │                   ├── GetSelf
    │   │   │                   └── GetVar(visitor)
    │   │   ├── Class: AstNot
    │   │   │   ├── Field: expr
    │   │   │   └── Method: accept
    │   │   │       └── Param: visitor
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── Method: visitAstNot
    │   │   │                   ├── GetSelf
    │   │   │                   └── GetVar(visitor)
    │   │   ├── Class: AstFloat
    │   │   │   ├── Field: value
    │   │   │   └── Method: accept
    │   │   │       └── Param: visitor
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── Method: visitAstFloat
    │   │   │                   ├── GetSelf
    │   │   │                   └── GetVar(visitor)
    │   │   ├── Class: AstInt
    │   │   │   ├── Field: value
    │   │   │   └── Method: accept
    │   │   │       └── Param: visitor
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── Method: visitAstInt
    │   │   │                   ├── GetSelf
    │   │   │                   └── GetVar(visitor)
    │   │   ├── Class: AstString
    │   │   │   ├── Field: value
    │   │   │   └── Method: accept
    │   │   │       └── Param: visitor
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── Method: visitAstString
    │   │   │                   ├── GetSelf
    │   │   │                   └── GetVar(visitor)
    │   │   ├── Class: AstGetField
    │   │   │   ├── Field: value
    │   │   │   └── Method: accept
    │   │   │       └── Param: visitor
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── Method: visitAstGetField
    │   │   │                   ├── GetSelf
    │   │   │                   └── GetVar(visitor)
    │   │   ├── Class: AstSetField
    │   │   │   ├── Field: name
    │   │   │   ├── Field: expr
    │   │   │   └── Method: accept
    │   │   │       └── Param: visitor
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── Method: visitAstSetField
    │   │   │                   ├── GetSelf
    │   │   │                   └── GetVar(visitor)
    │   │   ├── Class: AstList
    │   │   │   ├── Field: items
    │   │   │   └── Method: accept
    │   │   │       └── Param: visitor
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── Method: visitAstList
    │   │   │                   ├── GetSelf
    │   │   │                   └── GetVar(visitor)
    │   │   ├── Class: AstIndex
    │   │   │   ├── Field: lhs
    │   │   │   ├── Field: indexer
    │   │   │   ├── Method: accept
    │   │   │   │   └── Param: visitor
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Method: visitAstIndex
    │   │   │   │               ├── GetSelf
    │   │   │   │               └── GetVar(visitor)
    │   │   │   └── Method: kind
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── String("Index")
    │   │   ├── Class: AstIndexSet
    │   │   │   ├── Field: lhs
    │   │   │   ├── Field: indexer
    │   │   │   ├── Field: rhs
    │   │   │   └── Method: accept
    │   │   │       └── Param: visitor
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── Method: visitAstIndexSet
    │   │   │                   ├── GetSelf
    │   │   │                   └── GetVar(visitor)
    │   │   ├── Class: AstBool
    │   │   │   ├── Field: value
    │   │   │   └── Method: accept
    │   │   │       └── Param: visitor
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── Method: visitAstBool
    │   │   │                   ├── GetSelf
    │   │   │                   └── GetVar(visitor)
    │   │   ├── Class: AstNil
    │   │   │   └── Method: accept
    │   │   │       └── Param: visitor
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── Method: visitAstNil
    │   │   │                   ├── GetSelf
    │   │   │                   └── GetVar(visitor)
    │   │   ├── Class: AstGetVar
    │   │   │   ├── Field: value
    │   │   │   ├── Method: accept
    │   │   │   │   └── Param: visitor
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Method: visitAstGetVar
    │   │   │   │               ├── GetSelf
    │   │   │   │               └── GetVar(visitor)
    │   │   │   └── Method: kind
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── String("GetVar")
    │   │   ├── Class: AstDef
    │   │   │   ├── Field: name
    │   │   │   ├── Field: expr
    │   │   │   └── Method: accept
    │   │   │       └── Param: visitor
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── Method: visitAstDef
    │   │   │                   ├── GetSelf
    │   │   │                   └── GetVar(visitor)
    │   │   ├── Class: AstPlus
    │   │   │   ├── Field: lhs
    │   │   │   ├── Field: rhs
    │   │   │   └── Method: accept
    │   │   │       └── Param: visitor
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── Method: visitAstPlus
    │   │   │                   ├── GetSelf
    │   │   │                   └── GetVar(visitor)
    │   │   ├── Class: AstMinus
    │   │   │   ├── Field: lhs
    │   │   │   ├── Field: rhs
    │   │   │   └── Method: accept
    │   │   │       └── Param: visitor
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── Method: visitAstMinus
    │   │   │                   ├── GetSelf
    │   │   │                   └── GetVar(visitor)
    │   │   ├── Class: AstClass
    │   │   │   ├── Field: name
    │   │   │   ├── Field: fields
    │   │   │   ├── Field: methods
    │   │   │   └── Method: accept
    │   │   │       └── Param: visitor
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── Method: visitAstClass
    │   │   │                   ├── GetSelf
    │   │   │                   └── GetVar(visitor)
    │   │   ├── Class: AstBlock
    │   │   │   ├── Field: stmts
    │   │   │   └── Method: accept
    │   │   │       └── Param: visitor
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── Method: visitAstBlock
    │   │   │                   ├── GetSelf
    │   │   │                   └── GetVar(visitor)
    │   │   ├── Class: AstReassign
    │   │   │   ├── Field: name
    │   │   │   ├── Field: expr
    │   │   │   └── Method: accept
    │   │   │       └── Param: visitor
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── Method: visitAstReassign
    │   │   │                   ├── GetSelf
    │   │   │                   └── GetVar(visitor)
    │   │   ├── Class: AstInstance
    │   │   │   ├── Field: name
    │   │   │   ├── Field: args
    │   │   │   └── Method: accept
    │   │   │       └── Param: visitor
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── Method: visitAstInstance
    │   │   │                   ├── GetSelf
    │   │   │                   └── GetVar(visitor)
    │   │   ├── Class: AstNative
    │   │   │   ├── Field: name
    │   │   │   ├── Field: args
    │   │   │   └── Method: accept
    │   │   │       └── Param: visitor
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── Method: visitAstNative
    │   │   │                   ├── GetSelf
    │   │   │                   └── GetVar(visitor)
    │   │   ├── Class: AstMethod
    │   │   │   ├── Field: name
    │   │   │   ├── Field: args
    │   │   │   ├── Field: lhs
    │   │   │   ├── Method: accept
    │   │   │   │   └── Param: visitor
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Method: visitAstMethod
    │   │   │   │               ├── GetSelf
    │   │   │   │               └── GetVar(visitor)
    │   │   │   └── Method: kind
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── String("Method")
    │   │   ├── Class: AstPop
    │   │   │   ├── Field: expr
    │   │   │   └── Method: accept
    │   │   │       └── Param: visitor
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── Method: visitAstPop
    │   │   │                   ├── GetSelf
    │   │   │                   └── GetVar(visitor)
    │   │   ├── Class: AstEqualEqual
    │   │   │   ├── Field: lhs
    │   │   │   ├── Field: rhs
    │   │   │   └── Method: accept
    │   │   │       └── Param: visitor
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── Method: visitAstEqualEqual
    │   │   │                   ├── GetSelf
    │   │   │                   └── GetVar(visitor)
    │   │   ├── Class: AstIf
    │   │   │   ├── Field: condition
    │   │   │   ├── Field: block
    │   │   │   └── Method: accept
    │   │   │       └── Param: visitor
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── Method: visitAstIf
    │   │   │                   ├── GetSelf
    │   │   │                   └── GetVar(visitor)
    │   │   ├── Class: AstReturn
    │   │   │   ├── Field: expr
    │   │   │   └── Method: accept
    │   │   │       └── Param: visitor
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── Method: visitAstReturn
    │   │   │                   ├── GetSelf
    │   │   │                   └── GetVar(visitor)
    │   │   ├── Class: AstWhile
    │   │   │   ├── Field: condition
    │   │   │   ├── Field: block
    │   │   │   └── Method: accept
    │   │   │       └── Param: visitor
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── Method: visitAstWhile
    │   │   │                   ├── GetSelf
    │   │   │                   └── GetVar(visitor)
    │   │   ├── Class: AstOr
    │   │   │   ├── Field: lhs
    │   │   │   ├── Field: rhs
    │   │   │   └── Method: accept
    │   │   │       └── Param: visitor
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── Method: visitAstOr
    │   │   │                   ├── GetSelf
    │   │   │                   └── GetVar(visitor)
    │   │   ├── Class: AstAnd
    │   │   │   ├── Field: lhs
    │   │   │   ├── Field: rhs
    │   │   │   └── Method: accept
    │   │   │       └── Param: visitor
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── Method: visitAstAnd
    │   │   │                   ├── GetSelf
    │   │   │                   └── GetVar(visitor)
    │   │   ├── Class: AstBangEqual
    │   │   │   ├── Field: lhs
    │   │   │   ├── Field: rhs
    │   │   │   └── Method: accept
    │   │   │       └── Param: visitor
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── Method: visitAstBangEqual
    │   │   │                   ├── GetSelf
    │   │   │                   └── GetVar(visitor)
    │   │   ├── Class: AstGreater
    │   │   │   ├── Field: lhs
    │   │   │   ├── Field: rhs
    │   │   │   └── Method: accept
    │   │   │       └── Param: visitor
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── Method: visitAstGreater
    │   │   │                   ├── GetSelf
    │   │   │                   └── GetVar(visitor)
    │   │   ├── Class: AstGreaterEqual
    │   │   │   ├── Field: lhs
    │   │   │   ├── Field: rhs
    │   │   │   └── Method: accept
    │   │   │       └── Param: visitor
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── Method: visitAstGreaterEqual
    │   │   │                   ├── GetSelf
    │   │   │                   └── GetVar(visitor)
    │   │   ├── Class: AstLess
    │   │   │   ├── Field: lhs
    │   │   │   ├── Field: rhs
    │   │   │   └── Method: accept
    │   │   │       └── Param: visitor
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── Method: visitAstLess
    │   │   │                   ├── GetSelf
    │   │   │                   └── GetVar(visitor)
    │   │   ├── Class: AstLessEqual
    │   │   │   ├── Field: lhs
    │   │   │   ├── Field: rhs
    │   │   │   └── Method: accept
    │   │   │       └── Param: visitor
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── Method: visitAstLessEqual
    │   │   │                   ├── GetSelf
    │   │   │                   └── GetVar(visitor)
    │   │   ├── Class: AstGet
    │   │   │   ├── Field: lhs
    │   │   │   ├── Field: field
    │   │   │   ├── Method: accept
    │   │   │   │   └── Param: visitor
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Method: visitAstGet
    │   │   │   │               ├── GetSelf
    │   │   │   │               └── GetVar(visitor)
    │   │   │   └── Method: kind
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── String("Get")
    │   │   ├── Class: AstSet
    │   │   │   ├── Field: lhs
    │   │   │   ├── Field: field
    │   │   │   ├── Field: rhs
    │   │   │   ├── Method: accept
    │   │   │   │   └── Param: visitor
    │   │   │   │   └── Block
    │   │   │   │       └── Return
    │   │   │   │           └── Method: visitAstSet
    │   │   │   │               ├── GetSelf
    │   │   │   │               └── GetVar(visitor)
    │   │   │   └── Method: kind
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── String("Set")
    │   │   ├── Class: AstGetSelf
    │   │   │   └── Method: accept
    │   │   │       └── Param: visitor
    │   │   │       └── Block
    │   │   │           └── Return
    │   │   │               └── Method: visitAstSet
    │   │   │                   ├── GetSelf
    │   │   │                   └── GetVar(visitor)
    │   │   ├── Class: Method
    │   │   │   ├── Field: name
    │   │   │   ├── Field: params
    │   │   │   └── Field: block
    │   │   └── Class: Parser
    │   │       ├── Field: lexer
    │   │       ├── Method: consume
    │   │       │   └── Param: kind
    │   │       │   └── Block
    │   │       │       ├── Def: token
    │   │       │       │   └── Method: next
    │   │       │       │       └── Field("lexer")
    │   │       │       └── If
    │   │       │           ├── BangEqual
    │   │       │           │   ├── GetVar(kind)
    │   │       │           │   └── Get(kind)
    │   │       │           │       └── GetVar(token)
    │   │       │           └── Block
    │   │       │               └── Pop
    │   │       │                   └── Native: err
    │   │       │                       └── Plus
    │   │       │                           ├── Plus
    │   │       │                           │   ├── Plus
    │   │       │                           │   │   ├── String("expected ")
    │   │       │                           │   │   └── Native: to_string
    │   │       │                           │   │       └── GetVar(kind)
    │   │       │                           │   └── String(" but got ")
    │   │       │                           └── Native: to_string
    │   │       │                               └── Get(kind)
    │   │       │                                   └── GetVar(token)
    │   │       ├── Method: consume_identifier
    │   │       │   └── Block
    │   │       │       ├── Def: token
    │   │       │       │   └── Method: next
    │   │       │       │       └── Field("lexer")
    │   │       │       ├── If
    │   │       │       │   ├── BangEqual
    │   │       │       │   │   ├── Get(kind)
    │   │       │       │   │   │   └── GetVar(token)
    │   │       │       │   │   └── Method: Identifier
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Pop
    │   │       │       │           └── Native: err
    │   │       │       │               └── Plus
    │   │       │       │                   ├── String("expected identifier but got ")
    │   │       │       │                   └── Native: to_string
    │   │       │       │                       └── Get(kind)
    │   │       │       │                           └── GetVar(token)
    │   │       │       └── Return
    │   │       │           └── Get(value)
    │   │       │               └── GetVar(token)
    │   │       ├── Method: infix_prec
    │   │       │   └── Param: token
    │   │       │   └── Block
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── GetVar(token)
    │   │       │       │   │   └── Nil
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Int(0)
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── Get(kind)
    │   │       │       │   │   │   └── GetVar(token)
    │   │       │       │   │   └── Method: Equal
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Int(1)
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── Get(kind)
    │   │       │       │   │   │   └── GetVar(token)
    │   │       │       │   │   └── Method: Or
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Int(3)
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── Get(kind)
    │   │       │       │   │   │   └── GetVar(token)
    │   │       │       │   │   └── Method: And
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Int(4)
    │   │       │       ├── If
    │   │       │       │   ├── Or
    │   │       │       │   │   ├── EqualEqual
    │   │       │       │   │   │   ├── Get(kind)
    │   │       │       │   │   │   │   └── GetVar(token)
    │   │       │       │   │   │   └── Method: BangEqual
    │   │       │       │   │   │       └── GetVar(Kind)
    │   │       │       │   │   └── EqualEqual
    │   │       │       │   │       ├── Get(kind)
    │   │       │       │   │       │   └── GetVar(token)
    │   │       │       │   │       └── Method: EqualEqual
    │   │       │       │   │           └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Int(5)
    │   │       │       ├── If
    │   │       │       │   ├── Or
    │   │       │       │   │   ├── Or
    │   │       │       │   │   │   ├── Or
    │   │       │       │   │   │   │   ├── EqualEqual
    │   │       │       │   │   │   │   │   ├── Get(kind)
    │   │       │       │   │   │   │   │   │   └── GetVar(token)
    │   │       │       │   │   │   │   │   └── Method: Greater
    │   │       │       │   │   │   │   │       └── GetVar(Kind)
    │   │       │       │   │   │   │   └── EqualEqual
    │   │       │       │   │   │   │       ├── Get(kind)
    │   │       │       │   │   │   │       │   └── GetVar(token)
    │   │       │       │   │   │   │       └── Method: GreaterEqual
    │   │       │       │   │   │   │           └── GetVar(Kind)
    │   │       │       │   │   │   └── EqualEqual
    │   │       │       │   │   │       ├── Get(kind)
    │   │       │       │   │   │       │   └── GetVar(token)
    │   │       │       │   │   │       └── Method: Less
    │   │       │       │   │   │           └── GetVar(Kind)
    │   │       │       │   │   └── EqualEqual
    │   │       │       │   │       ├── Get(kind)
    │   │       │       │   │       │   └── GetVar(token)
    │   │       │       │   │       └── Method: LessEqual
    │   │       │       │   │           └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Int(6)
    │   │       │       ├── If
    │   │       │       │   ├── Or
    │   │       │       │   │   ├── EqualEqual
    │   │       │       │   │   │   ├── Get(kind)
    │   │       │       │   │   │   │   └── GetVar(token)
    │   │       │       │   │   │   └── Method: Plus
    │   │       │       │   │   │       └── GetVar(Kind)
    │   │       │       │   │   └── EqualEqual
    │   │       │       │   │       ├── Get(kind)
    │   │       │       │   │       │   └── GetVar(token)
    │   │       │       │   │       └── Method: Minus
    │   │       │       │   │           └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Int(7)
    │   │       │       ├── If
    │   │       │       │   ├── Or
    │   │       │       │   │   ├── EqualEqual
    │   │       │       │   │   │   ├── Get(kind)
    │   │       │       │   │   │   │   └── GetVar(token)
    │   │       │       │   │   │   └── Method: Star
    │   │       │       │   │   │       └── GetVar(Kind)
    │   │       │       │   │   └── EqualEqual
    │   │       │       │   │       ├── Get(kind)
    │   │       │       │   │       │   └── GetVar(token)
    │   │       │       │   │       └── Method: Slash
    │   │       │       │   │           └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Int(8)
    │   │       │       ├── If
    │   │       │       │   ├── Or
    │   │       │       │   │   ├── EqualEqual
    │   │       │       │   │   │   ├── Get(kind)
    │   │       │       │   │   │   │   └── GetVar(token)
    │   │       │       │   │   │   └── Method: LeftParen
    │   │       │       │   │   │       └── GetVar(Kind)
    │   │       │       │   │   └── EqualEqual
    │   │       │       │   │       ├── Get(kind)
    │   │       │       │   │       │   └── GetVar(token)
    │   │       │       │   │       └── Method: LeftBracket
    │   │       │       │   │           └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Int(10)
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── Get(kind)
    │   │       │       │   │   │   └── GetVar(token)
    │   │       │       │   │   └── Method: Dot
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Int(11)
    │   │       │       └── Return
    │   │       │           └── Int(0)
    │   │       ├── Method: field
    │   │       │   └── Block
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── Get(kind)
    │   │       │       │   │   │   └── Method: peek
    │   │       │       │   │   │       └── Field("lexer")
    │   │       │       │   │   └── Method: Identifier
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       ├── Def: name
    │   │       │       │       │   └── Method: consume_identifier
    │   │       │       │       └── Return
    │   │       │       │           └── Call: AstGetField
    │   │       │       │               └── GetVar(name)
    │   │       │       ├── Return
    │   │       │       │   └── Call: AstGetSelf
    │   │       │       └── Pop
    │   │       │           └── Native: err
    │   │       │               └── String("field")
    │   │       ├── Method: parse_prefix
    │   │       │   └── Block
    │   │       │       ├── Def: token
    │   │       │       │   └── Method: next
    │   │       │       │       └── Field("lexer")
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── Get(kind)
    │   │       │       │   │   │   └── GetVar(token)
    │   │       │       │   │   └── Method: Minus
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Pop
    │   │       │       │           └── Native: err
    │   │       │       │               └── String("minus")
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── Get(kind)
    │   │       │       │   │   │   └── GetVar(token)
    │   │       │       │   │   └── Method: Bang
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Pop
    │   │       │       │           └── Native: err
    │   │       │       │               └── String("bang")
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── Get(kind)
    │   │       │       │   │   │   └── GetVar(token)
    │   │       │       │   │   └── Method: LeftBracket
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Pop
    │   │       │       │           └── Native: err
    │   │       │       │               └── String("LeftBracket")
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── Get(kind)
    │   │       │       │   │   │   └── GetVar(token)
    │   │       │       │   │   └── Method: Identifier
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Call: AstGetVar
    │   │       │       │               └── Get(value)
    │   │       │       │                   └── GetVar(token)
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── Get(kind)
    │   │       │       │   │   │   └── GetVar(token)
    │   │       │       │   │   └── Method: Int
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Call: AstInt
    │   │       │       │               └── Get(value)
    │   │       │       │                   └── GetVar(token)
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── Get(kind)
    │   │       │       │   │   │   └── GetVar(token)
    │   │       │       │   │   └── Method: Float
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Pop
    │   │       │       │           └── Native: err
    │   │       │       │               └── String("FloatValue")
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── Get(kind)
    │   │       │       │   │   │   └── GetVar(token)
    │   │       │       │   │   └── Method: String
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Call: AstString
    │   │       │       │               └── Get(value)
    │   │       │       │                   └── GetVar(token)
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── Get(kind)
    │   │       │       │   │   │   └── GetVar(token)
    │   │       │       │   │   └── Method: Bool
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Pop
    │   │       │       │           └── Native: err
    │   │       │       │               └── String("BoolValue")
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── Get(kind)
    │   │       │       │   │   │   └── GetVar(token)
    │   │       │       │   │   └── Method: Nil
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Pop
    │   │       │       │           └── Native: err
    │   │       │       │               └── String("Nil")
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── Get(kind)
    │   │       │       │   │   │   └── GetVar(token)
    │   │       │       │   │   └── Method: At
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Method: field
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── Get(kind)
    │   │       │       │   │   │   └── GetVar(token)
    │   │       │       │   │   └── Method: Hash
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Method: native
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── Get(kind)
    │   │       │       │   │   │   └── GetVar(token)
    │   │       │       │   │   └── Method: LeftParen
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Pop
    │   │       │       │           └── Native: err
    │   │       │       │               └── String("LeftParen")
    │   │       │       └── Pop
    │   │       │           └── Native: err
    │   │       │               └── String("parse prefix")
    │   │       ├── Method: match_infix_token
    │   │       │   ├── Param: lhs
    │   │       │   ├── Param: rhs
    │   │       │   └── Param: kind
    │   │       │   └── Block
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── GetVar(kind)
    │   │       │       │   │   └── Method: Or
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Call: AstOr
    │   │       │       │               ├── GetVar(lhs)
    │   │       │       │               └── GetVar(rhs)
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── GetVar(kind)
    │   │       │       │   │   └── Method: And
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Call: AstAnd
    │   │       │       │               ├── GetVar(lhs)
    │   │       │       │               └── GetVar(rhs)
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── GetVar(kind)
    │   │       │       │   │   └── Method: BangEqual
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Call: AstAnd
    │   │       │       │               ├── GetVar(lhs)
    │   │       │       │               └── GetVar(rhs)
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── GetVar(kind)
    │   │       │       │   │   └── Method: BangEqual
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Call: AstBangEqual
    │   │       │       │               ├── GetVar(lhs)
    │   │       │       │               └── GetVar(rhs)
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── GetVar(kind)
    │   │       │       │   │   └── Method: EqualEqual
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Call: AstEqualEqual
    │   │       │       │               ├── GetVar(lhs)
    │   │       │       │               └── GetVar(rhs)
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── GetVar(kind)
    │   │       │       │   │   └── Method: Greater
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Call: AstGreater
    │   │       │       │               ├── GetVar(lhs)
    │   │       │       │               └── GetVar(rhs)
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── GetVar(kind)
    │   │       │       │   │   └── Method: GreaterEqual
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Call: AstGreaterEqual
    │   │       │       │               ├── GetVar(lhs)
    │   │       │       │               └── GetVar(rhs)
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── GetVar(kind)
    │   │       │       │   │   └── Method: Less
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Call: AstLess
    │   │       │       │               ├── GetVar(lhs)
    │   │       │       │               └── GetVar(rhs)
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── GetVar(kind)
    │   │       │       │   │   └── Method: LessEqual
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Call: AstLessEqual
    │   │       │       │               ├── GetVar(lhs)
    │   │       │       │               └── GetVar(rhs)
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── GetVar(kind)
    │   │       │       │   │   └── Method: Plus
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Call: AstPlus
    │   │       │       │               ├── GetVar(lhs)
    │   │       │       │               └── GetVar(rhs)
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── GetVar(kind)
    │   │       │       │   │   └── Method: Minus
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Call: AstMinus
    │   │       │       │               ├── GetVar(lhs)
    │   │       │       │               └── GetVar(rhs)
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── GetVar(kind)
    │   │       │       │   │   └── Method: Equal
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       ├── If
    │   │       │       │       │   ├── EqualEqual
    │   │       │       │       │   │   ├── Method: kind
    │   │       │       │       │   │   │   └── GetVar(lhs)
    │   │       │       │       │   │   └── String("GetVar")
    │   │       │       │       │   └── Block
    │   │       │       │       │       └── Return
    │   │       │       │       │           └── Call: AstReassign
    │   │       │       │       │               ├── Get(value)
    │   │       │       │       │               │   └── GetVar(lhs)
    │   │       │       │       │               └── GetVar(rhs)
    │   │       │       │       ├── If
    │   │       │       │       │   ├── EqualEqual
    │   │       │       │       │   │   ├── Method: kind
    │   │       │       │       │   │   │   └── GetVar(lhs)
    │   │       │       │       │   │   └── String("Get")
    │   │       │       │       │   └── Block
    │   │       │       │       │       └── Return
    │   │       │       │       │           └── Call: AstSet
    │   │       │       │       │               ├── Get(lhs)
    │   │       │       │       │               │   └── GetVar(lhs)
    │   │       │       │       │               ├── Get(field)
    │   │       │       │       │               │   └── GetVar(lhs)
    │   │       │       │       │               └── GetVar(rhs)
    │   │       │       │       └── If
    │   │       │       │           ├── EqualEqual
    │   │       │       │           │   ├── Method: kind
    │   │       │       │           │   │   └── GetVar(lhs)
    │   │       │       │           │   └── String("Index")
    │   │       │       │           └── Block
    │   │       │       │               └── Pop
    │   │       │       │                   └── Native: err
    │   │       │       │                       └── String("Index")
    │   │       │       └── Pop
    │   │       │           └── Native: err
    │   │       │               └── String("no infix token match")
    │   │       ├── Method: call
    │   │       │   └── Param: lhs
    │   │       │   └── Block
    │   │       │       ├── Def: args
    │   │       │       │   └── List
    │   │       │       ├── While
    │   │       │       │   ├── BangEqual
    │   │       │       │   │   ├── Get(kind)
    │   │       │       │   │   │   └── Method: peek
    │   │       │       │   │   │       └── Field("lexer")
    │   │       │       │   │   └── Method: RightParen
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       ├── Pop
    │   │       │       │       │   └── Native: append
    │   │       │       │       │       ├── GetVar(args)
    │   │       │       │       │       └── Method: expr
    │   │       │       │       └── If
    │   │       │       │           ├── EqualEqual
    │   │       │       │           │   ├── Get(kind)
    │   │       │       │           │   │   └── Method: peek
    │   │       │       │           │   │       └── Field("lexer")
    │   │       │       │           │   └── Method: Comma
    │   │       │       │           │       └── GetVar(Kind)
    │   │       │       │           └── Block
    │   │       │       │               └── Pop
    │   │       │       │                   └── Method: consume
    │   │       │       │                       └── Method: Comma
    │   │       │       │                           └── GetVar(Kind)
    │   │       │       ├── Pop
    │   │       │       │   └── Method: consume
    │   │       │       │       └── Method: RightParen
    │   │       │       │           └── GetVar(Kind)
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── Method: kind
    │   │       │       │   │   │   └── GetVar(lhs)
    │   │       │       │   │   └── String("GetVar")
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Call: AstInstance
    │   │       │       │               ├── Get(value)
    │   │       │       │               │   └── GetVar(lhs)
    │   │       │       │               └── GetVar(args)
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── Method: kind
    │   │       │       │   │   │   └── GetVar(lhs)
    │   │       │       │   │   └── String("Get")
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Call: AstMethod
    │   │       │       │               ├── Get(field)
    │   │       │       │               │   └── GetVar(lhs)
    │   │       │       │               ├── GetVar(args)
    │   │       │       │               └── Get(lhs)
    │   │       │       │                   └── GetVar(lhs)
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── Method: kind
    │   │       │       │   │   │   └── GetVar(lhs)
    │   │       │       │   │   └── String("GetField")
    │   │       │       │   └── Block
    │   │       │       │       └── Pop
    │   │       │       │           └── Native: err
    │   │       │       │               └── String("todo: Get()")
    │   │       │       └── Pop
    │   │       │           └── Native: err
    │   │       │               └── String("call err")
    │   │       ├── Method: get_or_set
    │   │       │   └── Param: lhs
    │   │       │   └── Block
    │   │       │       ├── Def: name
    │   │       │       │   └── Method: consume_identifier
    │   │       │       └── Return
    │   │       │           └── Call: AstGet
    │   │       │               ├── GetVar(lhs)
    │   │       │               └── GetVar(name)
    │   │       ├── Method: parse_infix
    │   │       │   └── Param: lhs
    │   │       │   └── Block
    │   │       │       ├── Def: token
    │   │       │       │   └── Method: peek
    │   │       │       │       └── Field("lexer")
    │   │       │       ├── While
    │   │       │       │   ├── BangEqual
    │   │       │       │   │   ├── GetVar(token)
    │   │       │       │   │   └── Nil
    │   │       │       │   └── Block
    │   │       │       │       ├── If
    │   │       │       │       │   ├── EqualEqual
    │   │       │       │       │   │   ├── Get(kind)
    │   │       │       │       │   │   │   └── GetVar(token)
    │   │       │       │       │   │   └── Method: LeftParen
    │   │       │       │       │   │       └── GetVar(Kind)
    │   │       │       │       │   └── Block
    │   │       │       │       │       ├── Pop
    │   │       │       │       │       │   └── Method: consume
    │   │       │       │       │       │       └── Method: LeftParen
    │   │       │       │       │       │           └── GetVar(Kind)
    │   │       │       │       │       └── Reassign: lhs
    │   │       │       │       │           └── Method: call
    │   │       │       │       │               └── GetVar(lhs)
    │   │       │       │       ├── If
    │   │       │       │       │   ├── EqualEqual
    │   │       │       │       │   │   ├── Get(kind)
    │   │       │       │       │   │   │   └── GetVar(token)
    │   │       │       │       │   │   └── Method: LeftBracket
    │   │       │       │       │   │       └── GetVar(Kind)
    │   │       │       │       │   └── Block
    │   │       │       │       │       └── Pop
    │   │       │       │       │           └── Native: err
    │   │       │       │       │               └── String("parse_infix left bracket ")
    │   │       │       │       ├── If
    │   │       │       │       │   ├── EqualEqual
    │   │       │       │       │   │   ├── Get(kind)
    │   │       │       │       │   │   │   └── GetVar(token)
    │   │       │       │       │   │   └── Method: Dot
    │   │       │       │       │   │       └── GetVar(Kind)
    │   │       │       │       │   └── Block
    │   │       │       │       │       ├── Pop
    │   │       │       │       │       │   └── Method: consume
    │   │       │       │       │       │       └── Method: Dot
    │   │       │       │       │       │           └── GetVar(Kind)
    │   │       │       │       │       └── Reassign: lhs
    │   │       │       │       │           └── Method: get_or_set
    │   │       │       │       │               └── GetVar(lhs)
    │   │       │       │       ├── If
    │   │       │       │       │   ├── And
    │   │       │       │       │   │   ├── And
    │   │       │       │       │   │   │   ├── BangEqual
    │   │       │       │       │   │   │   │   ├── Get(kind)
    │   │       │       │       │   │   │   │   │   └── GetVar(token)
    │   │       │       │       │   │   │   │   └── Method: LeftParen
    │   │       │       │       │   │   │   │       └── GetVar(Kind)
    │   │       │       │       │   │   │   └── BangEqual
    │   │       │       │       │   │   │       ├── Get(kind)
    │   │       │       │       │   │   │       │   └── GetVar(token)
    │   │       │       │       │   │   │       └── Method: LeftBracket
    │   │       │       │       │   │   │           └── GetVar(Kind)
    │   │       │       │       │   │   └── BangEqual
    │   │       │       │       │   │       ├── Get(kind)
    │   │       │       │       │   │       │   └── GetVar(token)
    │   │       │       │       │   │       └── Method: Dot
    │   │       │       │       │   │           └── GetVar(Kind)
    │   │       │       │       │   └── Block
    │   │       │       │       │       ├── Def: next_prec
    │   │       │       │       │       │   └── Method: infix_prec
    │   │       │       │       │       │       └── GetVar(token)
    │   │       │       │       │       ├── If
    │   │       │       │       │       │   ├── EqualEqual
    │   │       │       │       │       │   │   ├── GetVar(next_prec)
    │   │       │       │       │       │   │   └── Int(0)
    │   │       │       │       │       │   └── Block
    │   │       │       │       │       │       └── Return
    │   │       │       │       │       │           └── GetVar(lhs)
    │   │       │       │       │       ├── Pop
    │   │       │       │       │       │   └── Method: consume
    │   │       │       │       │       │       └── Get(kind)
    │   │       │       │       │       │           └── GetVar(token)
    │   │       │       │       │       ├── Def: rhs
    │   │       │       │       │       │   └── Method: parse_expr
    │   │       │       │       │       │       └── GetVar(next_prec)
    │   │       │       │       │       └── Reassign: lhs
    │   │       │       │       │           └── Method: match_infix_token
    │   │       │       │       │               ├── GetVar(lhs)
    │   │       │       │       │               ├── GetVar(rhs)
    │   │       │       │       │               └── Get(kind)
    │   │       │       │       │                   └── GetVar(token)
    │   │       │       │       └── Reassign: token
    │   │       │       │           └── Method: peek
    │   │       │       │               └── Field("lexer")
    │   │       │       └── Return
    │   │       │           └── GetVar(lhs)
    │   │       ├── Method: parse_expr
    │   │       │   └── Param: prec
    │   │       │   └── Block
    │   │       │       ├── Def: lhs
    │   │       │       │   └── Method: parse_prefix
    │   │       │       ├── While
    │   │       │       │   ├── Less
    │   │       │       │   │   ├── GetVar(prec)
    │   │       │       │   │   └── Method: infix_prec
    │   │       │       │   │       └── Method: peek
    │   │       │       │   │           └── Field("lexer")
    │   │       │       │   └── Block
    │   │       │       │       └── Reassign: lhs
    │   │       │       │           └── Method: parse_infix
    │   │       │       │               └── GetVar(lhs)
    │   │       │       └── Return
    │   │       │           └── GetVar(lhs)
    │   │       ├── Method: expr
    │   │       │   └── Block
    │   │       │       └── Return
    │   │       │           └── Method: parse_expr
    │   │       │               └── Int(0)
    │   │       ├── Method: block
    │   │       │   └── Block
    │   │       │       ├── Pop
    │   │       │       │   └── Method: consume
    │   │       │       │       └── Method: LeftBrace
    │   │       │       │           └── GetVar(Kind)
    │   │       │       ├── Def: stmts
    │   │       │       │   └── List
    │   │       │       ├── Def: done
    │   │       │       │   └── Bool(false)
    │   │       │       ├── While
    │   │       │       │   ├── Not
    │   │       │       │   │   └── GetVar(done)
    │   │       │       │   └── Block
    │   │       │       │       ├── Def: token
    │   │       │       │       │   └── Method: peek
    │   │       │       │       │       └── Field("lexer")
    │   │       │       │       ├── If
    │   │       │       │       │   ├── EqualEqual
    │   │       │       │       │   │   ├── Get(kind)
    │   │       │       │       │   │   │   └── GetVar(token)
    │   │       │       │       │   │   └── Method: RightBrace
    │   │       │       │       │   │       └── GetVar(Kind)
    │   │       │       │       │   └── Block
    │   │       │       │       │       └── Reassign: done
    │   │       │       │       │           └── Bool(true)
    │   │       │       │       └── If
    │   │       │       │           ├── BangEqual
    │   │       │       │           │   ├── Get(kind)
    │   │       │       │           │   │   └── GetVar(token)
    │   │       │       │           │   └── Method: RightBrace
    │   │       │       │           │       └── GetVar(Kind)
    │   │       │       │           └── Block
    │   │       │       │               └── Pop
    │   │       │       │                   └── Native: append
    │   │       │       │                       ├── GetVar(stmts)
    │   │       │       │                       └── Method: stmt
    │   │       │       ├── Pop
    │   │       │       │   └── Method: consume
    │   │       │       │       └── Method: RightBrace
    │   │       │       │           └── GetVar(Kind)
    │   │       │       └── Return
    │   │       │           └── Call: AstBlock
    │   │       │               └── GetVar(stmts)
    │   │       ├── Method: param_list
    │   │       │   └── Block
    │   │       │       ├── If
    │   │       │       │   ├── BangEqual
    │   │       │       │   │   ├── Get(kind)
    │   │       │       │   │   │   └── Method: peek
    │   │       │       │   │   │       └── Field("lexer")
    │   │       │       │   │   └── Method: LeftParen
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── List
    │   │       │       ├── Pop
    │   │       │       │   └── Method: consume
    │   │       │       │       └── Method: LeftParen
    │   │       │       │           └── GetVar(Kind)
    │   │       │       ├── Def: res
    │   │       │       │   └── List
    │   │       │       ├── While
    │   │       │       │   ├── BangEqual
    │   │       │       │   │   ├── Get(kind)
    │   │       │       │   │   │   └── Method: peek
    │   │       │       │   │   │       └── Field("lexer")
    │   │       │       │   │   └── Method: RightParen
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       ├── Def: token
    │   │       │       │       │   └── Method: peek
    │   │       │       │       │       └── Field("lexer")
    │   │       │       │       ├── If
    │   │       │       │       │   ├── EqualEqual
    │   │       │       │       │   │   ├── Get(kind)
    │   │       │       │       │   │   │   └── GetVar(token)
    │   │       │       │       │   │   └── Method: Identifier
    │   │       │       │       │   │       └── GetVar(Kind)
    │   │       │       │       │   └── Block
    │   │       │       │       │       ├── Def: name
    │   │       │       │       │       │   └── Method: consume_identifier
    │   │       │       │       │       └── Pop
    │   │       │       │       │           └── Native: append
    │   │       │       │       │               ├── GetVar(res)
    │   │       │       │       │               └── GetVar(name)
    │   │       │       │       └── If
    │   │       │       │           ├── EqualEqual
    │   │       │       │           │   ├── Get(kind)
    │   │       │       │           │   │   └── GetVar(token)
    │   │       │       │           │   └── Method: Comma
    │   │       │       │           │       └── GetVar(Kind)
    │   │       │       │           └── Block
    │   │       │       │               └── Pop
    │   │       │       │                   └── Method: consume
    │   │       │       │                       └── Method: Comma
    │   │       │       │                           └── GetVar(Kind)
    │   │       │       ├── Pop
    │   │       │       │   └── Method: consume
    │   │       │       │       └── Method: RightParen
    │   │       │       │           └── GetVar(Kind)
    │   │       │       └── Return
    │   │       │           └── GetVar(res)
    │   │       ├── Method: stmt_def
    │   │       │   └── Block
    │   │       │       ├── Pop
    │   │       │       │   └── Method: consume
    │   │       │       │       └── Method: Def
    │   │       │       │           └── GetVar(Kind)
    │   │       │       ├── Def: name
    │   │       │       │   └── Method: consume_identifier
    │   │       │       ├── Pop
    │   │       │       │   └── Method: consume
    │   │       │       │       └── Method: Equal
    │   │       │       │           └── GetVar(Kind)
    │   │       │       ├── Def: expr
    │   │       │       │   └── Method: expr
    │   │       │       └── Return
    │   │       │           └── Call: AstDef
    │   │       │               ├── GetVar(name)
    │   │       │               └── GetVar(expr)
    │   │       ├── Method: stmt_class
    │   │       │   └── Block
    │   │       │       ├── Pop
    │   │       │       │   └── Method: consume
    │   │       │       │       └── Method: Class
    │   │       │       │           └── GetVar(Kind)
    │   │       │       ├── Def: name
    │   │       │       │   └── Method: consume_identifier
    │   │       │       ├── Def: fields
    │   │       │       │   └── Method: param_list
    │   │       │       ├── Pop
    │   │       │       │   └── Method: consume
    │   │       │       │       └── Method: LeftBrace
    │   │       │       │           └── GetVar(Kind)
    │   │       │       ├── Def: methods
    │   │       │       │   └── List
    │   │       │       ├── While
    │   │       │       │   ├── BangEqual
    │   │       │       │   │   ├── Get(kind)
    │   │       │       │   │   │   └── Method: peek
    │   │       │       │   │   │       └── Field("lexer")
    │   │       │       │   │   └── Method: RightBrace
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       ├── Def: method_name
    │   │       │       │       │   └── Method: consume_identifier
    │   │       │       │       ├── Def: params
    │   │       │       │       │   └── Method: param_list
    │   │       │       │       ├── Def: block
    │   │       │       │       │   └── Method: block
    │   │       │       │       └── Pop
    │   │       │       │           └── Native: append
    │   │       │       │               ├── GetVar(methods)
    │   │       │       │               └── Call: Method
    │   │       │       │                   ├── GetVar(method_name)
    │   │       │       │                   ├── GetVar(params)
    │   │       │       │                   └── GetVar(block)
    │   │       │       ├── Pop
    │   │       │       │   └── Method: consume
    │   │       │       │       └── Method: RightBrace
    │   │       │       │           └── GetVar(Kind)
    │   │       │       └── Return
    │   │       │           └── Call: AstClass
    │   │       │               ├── GetVar(name)
    │   │       │               ├── GetVar(fields)
    │   │       │               └── GetVar(methods)
    │   │       ├── Method: list
    │   │       │   └── Block
    │   │       │       └── Pop
    │   │       │           └── Native: err
    │   │       │               └── String("list")
    │   │       ├── Method: stmt_if
    │   │       │   └── Block
    │   │       │       └── Pop
    │   │       │           └── Native: err
    │   │       │               └── String("if")
    │   │       ├── Method: stmt_while
    │   │       │   └── Block
    │   │       │       ├── Pop
    │   │       │       │   └── Method: consume
    │   │       │       │       └── Method: While
    │   │       │       │           └── GetVar(Kind)
    │   │       │       ├── Def: condition
    │   │       │       │   └── Method: expr
    │   │       │       ├── Def: block
    │   │       │       │   └── Method: block
    │   │       │       └── Return
    │   │       │           └── Call: AstWhile
    │   │       │               ├── GetVar(condition)
    │   │       │               └── GetVar(block)
    │   │       ├── Method: stmt_return
    │   │       │   └── Block
    │   │       │       └── Pop
    │   │       │           └── Native: err
    │   │       │               └── String("return")
    │   │       ├── Method: stmt_set_field
    │   │       │   └── Block
    │   │       │       ├── Pop
    │   │       │       │   └── Method: consume
    │   │       │       │       └── Method: At
    │   │       │       │           └── GetVar(Kind)
    │   │       │       ├── Def: name
    │   │       │       │   └── Method: consume_identifier
    │   │       │       ├── Def: next
    │   │       │       │   └── Method: next
    │   │       │       │       └── Field("lexer")
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── Get(kind)
    │   │       │       │   │   │   └── GetVar(next)
    │   │       │       │   │   └── Method: Equal
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Call: AstSetField
    │   │       │       │               ├── GetVar(name)
    │   │       │       │               └── Method: expr
    │   │       │       └── Pop
    │   │       │           └── Native: err
    │   │       │               └── String("todo: stmt_set_field")
    │   │       ├── Method: native
    │   │       │   └── Block
    │   │       │       ├── Def: name
    │   │       │       │   └── Method: consume_identifier
    │   │       │       ├── Pop
    │   │       │       │   └── Method: consume
    │   │       │       │       └── Method: LeftParen
    │   │       │       │           └── GetVar(Kind)
    │   │       │       ├── Def: args
    │   │       │       │   └── List
    │   │       │       ├── Def: done
    │   │       │       │   └── EqualEqual
    │   │       │       │       ├── Get(kind)
    │   │       │       │       │   └── Method: peek
    │   │       │       │       │       └── Field("lexer")
    │   │       │       │       └── Method: RightParen
    │   │       │       │           └── GetVar(Kind)
    │   │       │       ├── While
    │   │       │       │   ├── Not
    │   │       │       │   │   └── GetVar(done)
    │   │       │       │   └── Block
    │   │       │       │       ├── Pop
    │   │       │       │       │   └── Native: append
    │   │       │       │       │       ├── GetVar(args)
    │   │       │       │       │       └── Method: expr
    │   │       │       │       ├── Def: token
    │   │       │       │       │   └── Get(kind)
    │   │       │       │       │       └── Method: peek
    │   │       │       │       │           └── Field("lexer")
    │   │       │       │       ├── If
    │   │       │       │       │   ├── EqualEqual
    │   │       │       │       │   │   ├── GetVar(token)
    │   │       │       │       │   │   └── Method: Comma
    │   │       │       │       │   │       └── GetVar(Kind)
    │   │       │       │       │   └── Block
    │   │       │       │       │       └── Pop
    │   │       │       │       │           └── Method: consume
    │   │       │       │       │               └── Method: Comma
    │   │       │       │       │                   └── GetVar(Kind)
    │   │       │       │       └── If
    │   │       │       │           ├── EqualEqual
    │   │       │       │           │   ├── GetVar(token)
    │   │       │       │           │   └── Method: RightParen
    │   │       │       │           │       └── GetVar(Kind)
    │   │       │       │           └── Block
    │   │       │       │               └── Reassign: done
    │   │       │       │                   └── Bool(true)
    │   │       │       ├── Pop
    │   │       │       │   └── Method: consume
    │   │       │       │       └── Method: RightParen
    │   │       │       │           └── GetVar(Kind)
    │   │       │       └── Return
    │   │       │           └── Call: AstNative
    │   │       │               ├── GetVar(name)
    │   │       │               └── GetVar(args)
    │   │       ├── Method: stmt
    │   │       │   └── Block
    │   │       │       ├── Def: token
    │   │       │       │   └── Method: peek
    │   │       │       │       └── Field("lexer")
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── Get(kind)
    │   │       │       │   │   │   └── GetVar(token)
    │   │       │       │   │   └── Method: LeftBrace
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Method: block
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── Get(kind)
    │   │       │       │   │   │   └── GetVar(token)
    │   │       │       │   │   └── Method: Def
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Method: stmt_def
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── Get(kind)
    │   │       │       │   │   │   └── GetVar(token)
    │   │       │       │   │   └── Method: LeftBracket
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Method: list
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── Get(kind)
    │   │       │       │   │   │   └── GetVar(token)
    │   │       │       │   │   └── Method: Class
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Method: stmt_class
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── Get(kind)
    │   │       │       │   │   │   └── GetVar(token)
    │   │       │       │   │   └── Method: Identifier
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       ├── Def: expr
    │   │       │       │       │   └── Method: expr
    │   │       │       │       ├── Pop
    │   │       │       │       │   └── Native: print
    │   │       │       │       │       ├── String("todo: should pop if method instance or get")
    │   │       │       │       │       └── GetVar(expr)
    │   │       │       │       ├── Def: kind
    │   │       │       │       │   └── Method: kind
    │   │       │       │       │       └── GetVar(expr)
    │   │       │       │       ├── If
    │   │       │       │       │   ├── Or
    │   │       │       │       │   │   ├── EqualEqual
    │   │       │       │       │   │   │   ├── GetVar(kind)
    │   │       │       │       │   │   │   └── String("Method")
    │   │       │       │       │   │   └── Or
    │   │       │       │       │   │       ├── EqualEqual
    │   │       │       │       │   │       │   ├── GetVar(kind)
    │   │       │       │       │   │       │   └── String("Instance")
    │   │       │       │       │   │       └── EqualEqual
    │   │       │       │       │   │           ├── GetVar(kind)
    │   │       │       │       │   │           └── String("Get")
    │   │       │       │       │   └── Block
    │   │       │       │       │       └── Return
    │   │       │       │       │           └── Call: AstPop
    │   │       │       │       │               └── GetVar(expr)
    │   │       │       │       └── Return
    │   │       │       │           └── GetVar(expr)
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── Get(kind)
    │   │       │       │   │   │   └── GetVar(token)
    │   │       │       │   │   └── Method: If
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Method: stmt_if
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── Get(kind)
    │   │       │       │   │   │   └── GetVar(token)
    │   │       │       │   │   └── Method: While
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Method: stmt_while
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── Get(kind)
    │   │       │       │   │   │   └── GetVar(token)
    │   │       │       │   │   └── Method: Return
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Method: stmt_return
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── Get(kind)
    │   │       │       │   │   │   └── GetVar(token)
    │   │       │       │   │   └── Method: At
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       └── Return
    │   │       │       │           └── Method: stmt_set_field
    │   │       │       ├── If
    │   │       │       │   ├── EqualEqual
    │   │       │       │   │   ├── Get(kind)
    │   │       │       │   │   │   └── GetVar(token)
    │   │       │       │   │   └── Method: Hash
    │   │       │       │   │       └── GetVar(Kind)
    │   │       │       │   └── Block
    │   │       │       │       ├── Pop
    │   │       │       │       │   └── Method: consume
    │   │       │       │       │       └── Method: Hash
    │   │       │       │       │           └── GetVar(Kind)
    │   │       │       │       └── Return
    │   │       │       │           └── Call: AstPop
    │   │       │       │               └── Method: native
    │   │       │       └── Pop
    │   │       │           └── Native: err
    │   │       │               └── String("stmt")
    │   │       └── Method: parse_root
    │   │           └── Block
    │   │               ├── Def: root_list
    │   │               │   └── List
    │   │               ├── While
    │   │               │   ├── BangEqual
    │   │               │   │   ├── Method: peek
    │   │               │   │   │   └── Field("lexer")
    │   │               │   │   └── Nil
    │   │               │   └── Block
    │   │               │       ├── Def: node
    │   │               │       │   └── Method: stmt
    │   │               │       └── Pop
    │   │               │           └── Native: append
    │   │               │               ├── GetVar(root_list)
    │   │               │               └── GetVar(node)
    │   │               └── Return
    │   │                   └── Call: AstRoot
    │   │                       └── GetVar(root_list)
    │   ├── Root
    │   │   └── Class: AstPrinter
    │   │       ├── Field: indent
    │   │       ├── Field: is_last
    │   │       ├── Field: id1
    │   │       ├── Field: id2
    │   │       ├── Field: id3
    │   │       ├── Method: print_node
    │   │       │   └── Param: text
    │   │       │   └── Block
    │   │       │       ├── Def: remove_this
    │   │       │       │   └── String("└├│─")
    │   │       │       ├── Def: i
    │   │       │       │   └── Int(0)
    │   │       │       ├── Def: ind
    │   │       │       │   └── String("")
    │   │       │       ├── While
    │   │       │       │   ├── Less
    │   │       │       │   │   ├── GetVar(i)
    │   │       │       │   │   └── Native: len
    │   │       │       │   │       └── Field("indent")
    │   │       │       │   └── Block
    │   │       │       │       ├── Reassign: ind
    │   │       │       │       │   └── Plus
    │   │       │       │       │       ├── GetVar(ind)
    │   │       │       │       │       └── Index
    │   │       │       │       │           ├── Field("indent")
    │   │       │       │       │           └── GetVar(i)
    │   │       │       │       └── Reassign: i
    │   │       │       │           └── Plus
    │   │       │       │               ├── GetVar(i)
    │   │       │       │               └── Int(1)
    │   │       │       ├── If
    │   │       │       │   ├── Field("is_last")
    │   │       │       │   └── Block
    │   │       │       │       └── Pop
    │   │       │       │           └── Native: print
    │   │       │       │               ├── Plus
    │   │       │       │               │   ├── GetVar(ind)
    │   │       │       │               │   └── String("└──")
    │   │       │       │               └── GetVar(text)
    │   │       │       └── If
    │   │       │           ├── Not
    │   │       │           │   └── Field("is_last")
    │   │       │           └── Block
    │   │       │               └── Pop
    │   │       │                   └── Native: print
    │   │       │                       ├── Plus
    │   │       │                       │   ├── GetVar(ind)
    │   │       │                       │   └── String("├──")
    │   │       │                       └── GetVar(text)
    │   │       ├── Method: add_indent
    │   │       │   └── Block
    │   │       │       ├── If
    │   │       │       │   ├── Field("is_last")
    │   │       │       │   └── Block
    │   │       │       │       └── Pop
    │   │       │       │           └── Native: append
    │   │       │       │               ├── Field("indent")
    │   │       │       │               └── String("    ")
    │   │       │       └── If
    │   │       │           ├── Not
    │   │       │           │   └── Field("is_last")
    │   │       │           └── Block
    │   │       │               └── Pop
    │   │       │                   └── Native: append
    │   │       │                       ├── Field("indent")
    │   │       │                       └── String("│   ")
    │   │       ├── Method: pop_indent
    │   │       │   └── Block
    │   │       │       └── Pop
    │   │       │           └── Native: pop
    │   │       │               └── Field("indent")
    │   │       ├── Method: loop
    │   │       │   └── Param: list
    │   │       │   └── Block
    │   │       │       ├── Pop
    │   │       │       │   └── Method: add_indent
    │   │       │       ├── Def: i
    │   │       │       │   └── Int(0)
    │   │       │       ├── While
    │   │       │       │   ├── Less
    │   │       │       │   │   ├── GetVar(i)
    │   │       │       │   │   └── Native: len
    │   │       │       │   │       └── GetVar(list)
    │   │       │       │   └── Block
    │   │       │       │       ├── SetField(is_last)
    │   │       │       │       │   └── Bool(false)
    │   │       │       │       ├── If
    │   │       │       │       │   ├── EqualEqual
    │   │       │       │       │   │   ├── GetVar(i)
    │   │       │       │       │   │   └── Minus
    │   │       │       │       │   │       ├── Native: len
    │   │       │       │       │   │       │   └── GetVar(list)
    │   │       │       │       │   │       └── Int(1)
    │   │       │       │       │   └── Block
    │   │       │       │       │       └── SetField(is_last)
    │   │       │       │       │           └── Bool(true)
    │   │       │       │       ├── Pop
    │   │       │       │       │   └── Method: accept
    │   │       │       │       │       ├── GetSelf
    │   │       │       │       │       └── Index
    │   │       │       │       │           ├── GetVar(list)
    │   │       │       │       │           └── GetVar(i)
    │   │       │       │       └── Reassign: i
    │   │       │       │           └── Plus
    │   │       │       │               ├── GetVar(i)
    │   │       │       │               └── Int(1)
    │   │       │       └── Pop
    │   │       │           └── Method: pop_indent
    │   │       ├── Method: visitAstRoot
    │   │       │   └── Param: self
    │   │       │   └── Block
    │   │       │       ├── Pop
    │   │       │       │   └── Native: print
    │   │       │       │       └── String("visiting root")
    │   │       │       ├── Pop
    │   │       │       │   └── Method: print_node
    │   │       │       │       └── String("Root")
    │   │       │       ├── Pop
    │   │       │       │   └── Method: loop
    │   │       │       │       └── Get(nodes)
    │   │       │       │           └── GetVar(self)
    │   │       │       └── Pop
    │   │       │           └── Native: print
    │   │       │               └── String("done visiting root")
    │   │       ├── Method: visitAstNeg
    │   │       │   └── Param: self
    │   │       │   └── Block
    │   │       │       └── Pop
    │   │       │           └── Native: err
    │   │       │               └── String("Neg - AstPrinter")
    │   │       ├── Method: visitAstNot
    │   │       │   └── Param: self
    │   │       │   └── Block
    │   │       │       └── Pop
    │   │       │           └── Native: err
    │   │       │               └── String("Not - AstPrinter")
    │   │       ├── Method: visitAstFloat
    │   │       │   └── Param: self
    │   │       │   └── Block
    │   │       │       └── Pop
    │   │       │           └── Native: err
    │   │       │               └── String("Float - AstPrinter")
    │   │       ├── Method: visitAstInt
    │   │       │   └── Param: self
    │   │       │   └── Block
    │   │       │       └── Pop
    │   │       │           └── Method: print_node
    │   │       │               └── Plus
    │   │       │                   ├── String("Int(")
    │   │       │                   └── Plus
    │   │       │                       ├── Get(value)
    │   │       │                       │   └── GetVar(self)
    │   │       │                       └── String(")")
    │   │       ├── Method: visitAstString
    │   │       │   └── Param: self
    │   │       │   └── Block
    │   │       │       └── Pop
    │   │       │           └── Method: print_node
    │   │       │               └── Plus
    │   │       │                   ├── String("String(")
    │   │       │                   └── Plus
    │   │       │                       ├── Get(value)
    │   │       │                       │   └── GetVar(self)
    │   │       │                       └── String(")")
    │   │       ├── Method: visitAstGetField
    │   │       │   └── Param: self
    │   │       │   └── Block
    │   │       │       └── Pop
    │   │       │           └── Method: print_node
    │   │       │               └── Plus
    │   │       │                   ├── String("Field(")
    │   │       │                   └── Plus
    │   │       │                       ├── Get(value)
    │   │       │                       │   └── GetVar(self)
    │   │       │                       └── String(")")
    │   │       ├── Method: visitAstSetField
    │   │       │   └── Param: self
    │   │       │   └── Block
    │   │       │       ├── Pop
    │   │       │       │   └── Method: print_node
    │   │       │       │       └── Plus
    │   │       │       │           ├── String("SetField(")
    │   │       │       │           └── Plus
    │   │       │       │               ├── Get(name)
    │   │       │       │               │   └── GetVar(self)
    │   │       │       │               └── String(")")
    │   │       │       ├── SetField(is_last)
    │   │       │       │   └── Bool(true)
    │   │       │       ├── Pop
    │   │       │       │   └── Method: add_indent
    │   │       │       ├── Pop
    │   │       │       │   └── Method: accept
    │   │       │       │       ├── GetSelf
    │   │       │       │       └── Get(expr)
    │   │       │       │           └── GetVar(self)
    │   │       │       └── Pop
    │   │       │           └── Method: pop_indent
    │   │       ├── Method: visitAstList
    │   │       │   └── Param: self
    │   │       │   └── Block
    │   │       │       └── Pop
    │   │       │           └── Native: err
    │   │       │               └── String("List - AstPrinter")
    │   │       ├── Method: visitAstIndex
    │   │       │   └── Param: self
    │   │       │   └── Block
    │   │       │       └── Pop
    │   │       │           └── Native: err
    │   │       │               └── String("Index - AstPrinter")
    │   │       ├── Method: visitAstIndexSet
    │   │       │   └── Param: self
    │   │       │   └── Block
    │   │       │       └── Pop
    │   │       │           └── Native: err
    │   │       │               └── String("IndexSet - AstPrinter")
    │   │       ├── Method: visitAstBool
    │   │       │   └── Param: self
    │   │       │   └── Block
    │   │       │       └── Pop
    │   │       │           └── Native: err
    │   │       │               └── String("Bool - AstPrinter")
    │   │       ├── Method: visitAstNil
    │   │       │   └── Param: self
    │   │       │   └── Block
    │   │       │       └── Pop
    │   │       │           └── Native: err
    │   │       │               └── String("Nil - AstPrinter")
    │   │       ├── Method: visitAstGetVar
    │   │       │   └── Param: self
    │   │       │   └── Block
    │   │       │       └── Pop
    │   │       │           └── Method: print_node
    │   │       │               └── Plus
    │   │       │                   ├── String("GetVar(")
    │   │       │                   └── Plus
    │   │       │                       ├── Get(value)
    │   │       │                       │   └── GetVar(self)
    │   │       │                       └── String(")")
    │   │       ├── Method: visitAstDef
    │   │       │   └── Param: self
    │   │       │   └── Block
    │   │       │       ├── Pop
    │   │       │       │   └── Method: print_node
    │   │       │       │       └── Plus
    │   │       │       │           ├── String("Def: ")
    │   │       │       │           └── Get(name)
    │   │       │       │               └── GetVar(self)
    │   │       │       ├── Pop
    │   │       │       │   └── Method: add_indent
    │   │       │       ├── SetField(is_last)
    │   │       │       │   └── Bool(true)
    │   │       │       ├── Pop
    │   │       │       │   └── Method: accept
    │   │       │       │       ├── GetSelf
    │   │       │       │       └── Get(expr)
    │   │       │       │           └── GetVar(self)
    │   │       │       └── Pop
    │   │       │           └── Method: pop_indent
    │   │       ├── Method: visitAstPlus
    │   │       │   └── Param: self
    │   │       │   └── Block
    │   │       │       ├── Pop
    │   │       │       │   └── Method: print_node
    │   │       │       │       └── String("Plus")
    │   │       │       ├── Pop
    │   │       │       │   └── Method: add_indent
    │   │       │       ├── SetField(is_last)
    │   │       │       │   └── Bool(false)
    │   │       │       ├── Pop
    │   │       │       │   └── Method: accept
    │   │       │       │       ├── GetSelf
    │   │       │       │       └── Get(lhs)
    │   │       │       │           └── GetVar(self)
    │   │       │       ├── SetField(is_last)
    │   │       │       │   └── Bool(true)
    │   │       │       ├── Pop
    │   │       │       │   └── Method: accept
    │   │       │       │       ├── GetSelf
    │   │       │       │       └── Get(rhs)
    │   │       │       │           └── GetVar(self)
    │   │       │       └── Pop
    │   │       │           └── Method: pop_indent
    │   │       ├── Method: visitAstClass
    │   │       │   └── Param: self
    │   │       │   └── Block
    │   │       │       ├── Pop
    │   │       │       │   └── Method: print_node
    │   │       │       │       └── Plus
    │   │       │       │           ├── String("Class: ")
    │   │       │       │           └── Get(name)
    │   │       │       │               └── GetVar(self)
    │   │       │       ├── Pop
    │   │       │       │   └── Method: add_indent
    │   │       │       ├── Def: i
    │   │       │       │   └── Int(0)
    │   │       │       ├── SetField(is_last)
    │   │       │       │   └── Bool(false)
    │   │       │       ├── While
    │   │       │       │   ├── Less
    │   │       │       │   │   ├── GetVar(i)
    │   │       │       │   │   └── Native: len
    │   │       │       │   │       └── Get(fields)
    │   │       │       │   │           └── GetVar(self)
    │   │       │       │   └── Block
    │   │       │       │       ├── Pop
    │   │       │       │       │   └── Method: print_node
    │   │       │       │       │       └── Plus
    │   │       │       │       │           ├── String("Field: ")
    │   │       │       │       │           └── Index
    │   │       │       │       │               ├── Get(fields)
    │   │       │       │       │               │   └── GetVar(self)
    │   │       │       │       │               └── GetVar(i)
    │   │       │       │       └── Reassign: i
    │   │       │       │           └── Plus
    │   │       │       │               ├── GetVar(i)
    │   │       │       │               └── Int(1)
    │   │       │       ├── Reassign: i
    │   │       │       │   └── Int(0)
    │   │       │       ├── While
    │   │       │       │   ├── Less
    │   │       │       │   │   ├── GetVar(i)
    │   │       │       │   │   └── Native: len
    │   │       │       │   │       └── Get(methods)
    │   │       │       │   │           └── GetVar(self)
    │   │       │       │   └── Block
    │   │       │       │       ├── If
    │   │       │       │       │   ├── EqualEqual
    │   │       │       │       │   │   ├── GetVar(i)
    │   │       │       │       │   │   └── Minus
    │   │       │       │       │   │       ├── Native: len
    │   │       │       │       │   │       │   └── Get(methods)
    │   │       │       │       │   │       │       └── GetVar(self)
    │   │       │       │       │   │       └── Int(1)
    │   │       │       │       │   └── Block
    │   │       │       │       │       └── SetField(is_last)
    │   │       │       │       │           └── Bool(true)
    │   │       │       │       ├── Pop
    │   │       │       │       │   └── Method: print_node
    │   │       │       │       │       └── Plus
    │   │       │       │       │           ├── String("Method: ")
    │   │       │       │       │           └── Get(name)
    │   │       │       │       │               └── Index
    │   │       │       │       │                   ├── Get(methods)
    │   │       │       │       │                   │   └── GetVar(self)
    │   │       │       │       │                   └── GetVar(i)
    │   │       │       │       ├── Pop
    │   │       │       │       │   └── Method: add_indent
    │   │       │       │       ├── Pop
    │   │       │       │       │   └── Method: accept
    │   │       │       │       │       ├── GetSelf
    │   │       │       │       │       └── Get(block)
    │   │       │       │       │           └── Index
    │   │       │       │       │               ├── Get(methods)
    │   │       │       │       │               │   └── GetVar(self)
    │   │       │       │       │               └── GetVar(i)
    │   │       │       │       ├── Pop
    │   │       │       │       │   └── Method: pop_indent
    │   │       │       │       └── Reassign: i
    │   │       │       │           └── Plus
    │   │       │       │               ├── GetVar(i)
    │   │       │       │               └── Int(1)
    │   │       │       └── Pop
    │   │       │           └── Method: pop_indent
    │   │       ├── Method: visitAstBlock
    │   │       │   └── Param: self
    │   │       │   └── Block
    │   │       │       ├── Pop
    │   │       │       │   └── Method: print_node
    │   │       │       │       └── String("Block")
    │   │       │       └── Pop
    │   │       │           └── Method: loop
    │   │       │               └── Get(stmts)
    │   │       │                   └── GetVar(self)
    │   │       ├── Method: visitAstReassign
    │   │       │   └── Param: self
    │   │       │   └── Block
    │   │       │       ├── Pop
    │   │       │       │   └── Method: print_node
    │   │       │       │       └── Plus
    │   │       │       │           ├── String("Reassign: ")
    │   │       │       │           └── Get(name)
    │   │       │       │               └── GetVar(self)
    │   │       │       ├── Pop
    │   │       │       │   └── Method: add_indent
    │   │       │       ├── SetField(is_last)
    │   │       │       │   └── Bool(true)
    │   │       │       ├── Pop
    │   │       │       │   └── Method: accept
    │   │       │       │       ├── GetSelf
    │   │       │       │       └── Get(expr)
    │   │       │       │           └── GetVar(self)
    │   │       │       └── Pop
    │   │       │           └── Method: pop_indent
    │   │       ├── Method: visitAstInstance
    │   │       │   └── Param: self
    │   │       │   └── Block
    │   │       │       ├── Pop
    │   │       │       │   └── Method: print_node
    │   │       │       │       └── Plus
    │   │       │       │           ├── String("Instance: ")
    │   │       │       │           └── Get(name)
    │   │       │       │               └── GetVar(self)
    │   │       │       └── Pop
    │   │       │           └── Method: loop
    │   │       │               └── Get(args)
    │   │       │                   └── GetVar(self)
    │   │       ├── Method: visitAstNative
    │   │       │   └── Param: self
    │   │       │   └── Block
    │   │       │       ├── Pop
    │   │       │       │   └── Method: print_node
    │   │       │       │       └── Plus
    │   │       │       │           ├── String("Native: ")
    │   │       │       │           └── Get(name)
    │   │       │       │               └── GetVar(self)
    │   │       │       └── Pop
    │   │       │           └── Method: loop
    │   │       │               └── Get(args)
    │   │       │                   └── GetVar(self)
    │   │       ├── Method: visitAstMethod
    │   │       │   └── Param: self
    │   │       │   └── Block
    │   │       │       ├── Pop
    │   │       │       │   └── Method: print_node
    │   │       │       │       └── Plus
    │   │       │       │           ├── String("MethodCall: ")
    │   │       │       │           └── Get(name)
    │   │       │       │               └── GetVar(self)
    │   │       │       ├── Pop
    │   │       │       │   └── Method: add_indent
    │   │       │       ├── SetField(is_last)
    │   │       │       │   └── Bool(false)
    │   │       │       ├── Def: i
    │   │       │       │   └── Int(0)
    │   │       │       ├── Pop
    │   │       │       │   └── Method: print_node
    │   │       │       │       └── String("Args")
    │   │       │       ├── Pop
    │   │       │       │   └── Method: add_indent
    │   │       │       ├── SetField(is_last)
    │   │       │       │   └── Bool(false)
    │   │       │       ├── While
    │   │       │       │   ├── Less
    │   │       │       │   │   ├── GetVar(i)
    │   │       │       │   │   └── Native: len
    │   │       │       │   │       └── Get(args)
    │   │       │       │   │           └── GetVar(self)
    │   │       │       │   └── Block
    │   │       │       │       ├── If
    │   │       │       │       │   ├── EqualEqual
    │   │       │       │       │   │   ├── GetVar(i)
    │   │       │       │       │   │   └── Minus
    │   │       │       │       │   │       ├── Native: len
    │   │       │       │       │   │       │   └── Get(args)
    │   │       │       │       │   │       │       └── GetVar(self)
    │   │       │       │       │   │       └── Int(1)
    │   │       │       │       │   └── Block
    │   │       │       │       │       └── SetField(is_last)
    │   │       │       │       │           └── Bool(true)
    │   │       │       │       ├── Pop
    │   │       │       │       │   └── Method: accept
    │   │       │       │       │       ├── GetSelf
    │   │       │       │       │       └── Index
    │   │       │       │       │           ├── Get(args)
    │   │       │       │       │           │   └── GetVar(self)
    │   │       │       │       │           └── GetVar(i)
    │   │       │       │       └── Reassign: i
    │   │       │       │           └── Plus
    │   │       │       │               ├── GetVar(i)
    │   │       │       │               └── Int(1)
    │   │       │       ├── Pop
    │   │       │       │   └── Method: pop_indent
    │   │       │       ├── SetField(is_last)
    │   │       │       │   └── Bool(true)
    │   │       │       ├── Pop
    │   │       │       │   └── Method: accept
    │   │       │       │       ├── GetSelf
    │   │       │       │       └── Get(lhs)
    │   │       │       │           └── GetVar(self)
    │   │       │       └── Pop
    │   │       │           └── Method: pop_indent
    │   │       ├── Method: visitAstPop
    │   │       │   └── Param: self
    │   │       │   └── Block
    │   │       │       ├── Pop
    │   │       │       │   └── Method: print_node
    │   │       │       │       └── String("Pop")
    │   │       │       ├── Pop
    │   │       │       │   └── Method: add_indent
    │   │       │       ├── SetField(is_last)
    │   │       │       │   └── Bool(true)
    │   │       │       ├── Pop
    │   │       │       │   └── Method: accept
    │   │       │       │       ├── GetSelf
    │   │       │       │       └── Get(expr)
    │   │       │       │           └── GetVar(self)
    │   │       │       └── Pop
    │   │       │           └── Method: pop_indent
    │   │       ├── Method: visitAstEqualEqual
    │   │       │   └── Param: self
    │   │       │   └── Block
    │   │       │       └── Pop
    │   │       │           └── Native: err
    │   │       │               └── String("EqualEqual - AstPrinter")
    │   │       ├── Method: visitAstIf
    │   │       │   └── Param: self
    │   │       │   └── Block
    │   │       │       └── Pop
    │   │       │           └── Native: err
    │   │       │               └── String("If - AstPrinter")
    │   │       ├── Method: visitAstReturn
    │   │       │   └── Param: self
    │   │       │   └── Block
    │   │       │       └── Pop
    │   │       │           └── Native: err
    │   │       │               └── String("Return - AstPrinter")
    │   │       ├── Method: visitAstWhile
    │   │       │   └── Param: self
    │   │       │   └── Block
    │   │       │       ├── Pop
    │   │       │       │   └── Method: print_node
    │   │       │       │       └── String("While")
    │   │       │       ├── Pop
    │   │       │       │   └── Method: add_indent
    │   │       │       ├── Pop
    │   │       │       │   └── Method: accept
    │   │       │       │       ├── GetSelf
    │   │       │       │       └── Get(condition)
    │   │       │       │           └── GetVar(self)
    │   │       │       ├── SetField(is_last)
    │   │       │       │   └── Bool(true)
    │   │       │       ├── Pop
    │   │       │       │   └── Method: accept
    │   │       │       │       ├── GetSelf
    │   │       │       │       └── Get(block)
    │   │       │       │           └── GetVar(self)
    │   │       │       └── Pop
    │   │       │           └── Method: pop_indent
    │   │       ├── Method: visitAstOr
    │   │       │   └── Param: self
    │   │       │   └── Block
    │   │       │       └── Pop
    │   │       │           └── Native: err
    │   │       │               └── String("Or - AstPrinter")
    │   │       ├── Method: visitAstAnd
    │   │       │   └── Param: self
    │   │       │   └── Block
    │   │       │       └── Pop
    │   │       │           └── Native: err
    │   │       │               └── String("And - AstPrinter")
    │   │       ├── Method: visitAstBangEqual
    │   │       │   └── Param: self
    │   │       │   └── Block
    │   │       │       └── Pop
    │   │       │           └── Native: err
    │   │       │               └── String("BangEqual - AstPrinter")
    │   │       ├── Method: visitAstGreater
    │   │       │   └── Param: self
    │   │       │   └── Block
    │   │       │       └── Pop
    │   │       │           └── Native: err
    │   │       │               └── String("Greater - AstPrinter")
    │   │       ├── Method: visitAstGreaterEqual
    │   │       │   └── Param: self
    │   │       │   └── Block
    │   │       │       └── Pop
    │   │       │           └── Native: err
    │   │       │               └── String("GreaterEqual - AstPrinter")
    │   │       ├── Method: visitAstLess
    │   │       │   └── Param: self
    │   │       │   └── Block
    │   │       │       ├── Pop
    │   │       │       │   └── Method: print_node
    │   │       │       │       └── String("Less")
    │   │       │       ├── Pop
    │   │       │       │   └── Method: add_indent
    │   │       │       ├── SetField(is_last)
    │   │       │       │   └── Bool(false)
    │   │       │       ├── Pop
    │   │       │       │   └── Method: accept
    │   │       │       │       ├── GetSelf
    │   │       │       │       └── Get(lhs)
    │   │       │       │           └── GetVar(self)
    │   │       │       ├── SetField(is_last)
    │   │       │       │   └── Bool(true)
    │   │       │       ├── Pop
    │   │       │       │   └── Method: accept
    │   │       │       │       ├── GetSelf
    │   │       │       │       └── Get(rhs)
    │   │       │       │           └── GetVar(self)
    │   │       │       └── Pop
    │   │       │           └── Method: pop_indent
    │   │       ├── Method: visitAstLessEqual
    │   │       │   └── Param: self
    │   │       │   └── Block
    │   │       │       └── Pop
    │   │       │           └── Native: err
    │   │       │               └── String("LessEqual - AstPrinter")
    │   │       ├── Method: visitAstGet
    │   │       │   └── Param: self
    │   │       │   └── Block
    │   │       │       ├── Pop
    │   │       │       │   └── Method: print_node
    │   │       │       │       └── Plus
    │   │       │       │           ├── String("Get(")
    │   │       │       │           └── Plus
    │   │       │       │               ├── Get(field)
    │   │       │       │               │   └── GetVar(self)
    │   │       │       │               └── String(")")
    │   │       │       ├── SetField(is_last)
    │   │       │       │   └── Bool(true)
    │   │       │       ├── Pop
    │   │       │       │   └── Method: add_indent
    │   │       │       ├── Pop
    │   │       │       │   └── Method: accept
    │   │       │       │       ├── GetSelf
    │   │       │       │       └── Get(lhs)
    │   │       │       │           └── GetVar(self)
    │   │       │       └── Pop
    │   │       │           └── Method: pop_indent
    │   │       └── Method: visitAstSet
    │   │           └── Param: self
    │   │           └── Block
    │   │               ├── Pop
    │   │               │   └── Method: print_node
    │   │               │       └── Plus
    │   │               │           ├── String("Set(")
    │   │               │           └── Plus
    │   │               │               ├── Get(field)
    │   │               │               │   └── GetVar(self)
    │   │               │               └── String(")")
    │   │               ├── Pop
    │   │               │   └── Method: add_indent
    │   │               ├── SetField(is_last)
    │   │               │   └── Bool(false)
    │   │               ├── Pop
    │   │               │   └── Method: accept
    │   │               │       ├── GetSelf
    │   │               │       └── Get(lhs)
    │   │               │           └── GetVar(self)
    │   │               ├── SetField(is_last)
    │   │               │   └── Bool(true)
    │   │               ├── Pop
    │   │               │   └── Method: accept
    │   │               │       ├── GetSelf
    │   │               │       └── Get(rhs)
    │   │               │           └── GetVar(self)
    │   │               └── Pop
    │   │                   └── Method: pop_indent
    │   └── Root
    │       ├── Class: Local
    │       │   ├── Field: name
    │       │   ├── Field: depth
    │       │   └── Field: stack_pos
    │       ├── Class: CompilerClass
    │       │   ├── Field: name
    │       │   ├── Field: fields
    │       │   └── Field: methods
    │       ├── Class: CompilerMethod
    │       │   ├── Field: name
    │       │   └── Field: code_start
    │       └── Class: Compiler
    │           ├── Field: code
    │           ├── Field: strings
    │           ├── Field: variables
    │           ├── Field: depth
    │           ├── Field: classes
    │           ├── Field: current_fields
    │           ├── Field: current_class_name
    │           ├── Method: init
    │           │   └── Block
    │           │       ├── Pop
    │           │       │   └── Native: print
    │           │       │       └── String("init compiler")
    │           │       ├── SetField(code)
    │           │       │   └── List
    │           │       ├── SetField(strings)
    │           │       │   └── List
    │           │       ├── SetField(variables)
    │           │       │   └── List
    │           │       │       └── List
    │           │       ├── SetField(depth)
    │           │       │   └── Int(0)
    │           │       ├── SetField(classes)
    │           │       │   └── List
    │           │       ├── SetField(current_fields)
    │           │       │   └── Nil
    │           │       └── SetField(current_class_name)
    │           │           └── Nil
    │           ├── Method: find_class
    │           │   └── Param: name
    │           │   └── Block
    │           │       ├── Def: i
    │           │       │   └── Int(0)
    │           │       ├── While
    │           │       │   ├── Less
    │           │       │   │   ├── GetVar(i)
    │           │       │   │   └── Native: len
    │           │       │   │       └── Field("classes")
    │           │       │   └── Block
    │           │       │       ├── If
    │           │       │       │   ├── EqualEqual
    │           │       │       │   │   ├── GetVar(name)
    │           │       │       │   │   └── Get(name)
    │           │       │       │   │       └── Index
    │           │       │       │   │           ├── Field("classes")
    │           │       │       │   │           └── GetVar(i)
    │           │       │       │   └── Block
    │           │       │       │       └── Return
    │           │       │       │           └── Index
    │           │       │       │               ├── Field("classes")
    │           │       │       │               └── GetVar(i)
    │           │       │       └── Reassign: i
    │           │       │           └── Plus
    │           │       │               ├── GetVar(i)
    │           │       │               └── Int(1)
    │           │       └── Return
    │           │           └── Nil
    │           ├── Method: push_code
    │           │   └── Param: code
    │           │   └── Block
    │           │       └── Pop
    │           │           └── Native: append
    │           │               ├── Field("code")
    │           │               └── GetVar(code)
    │           ├── Method: begin_method
    │           │   └── Block
    │           │       ├── Pop
    │           │       │   └── Native: append
    │           │       │       ├── Field("variables")
    │           │       │       └── List
    │           │       └── SetField(depth)
    │           │           └── Plus
    │           │               ├── Field("depth")
    │           │               └── Int(1)
    │           ├── Method: end_method
    │           │   └── Block
    │           │       ├── Def: w
    │           │       │   └── Native: pop
    │           │       │       └── Field("variables")
    │           │       └── SetField(depth)
    │           │           └── Minus
    │           │               ├── Field("depth")
    │           │               └── Int(1)
    │           ├── Method: begin_scope
    │           │   └── Block
    │           │       └── SetField(depth)
    │           │           └── Plus
    │           │               ├── Field("depth")
    │           │               └── Int(1)
    │           ├── Method: end_scope
    │           │   └── Block
    │           │       ├── Def: last_vars
    │           │       │   └── Native: pop
    │           │       │       └── Field("variables")
    │           │       ├── Def: len
    │           │       │   └── Native: len
    │           │       │       └── GetVar(last_vars)
    │           │       ├── Def: i
    │           │       │   └── Int(0)
    │           │       ├── Def: new_vars
    │           │       │   └── List
    │           │       ├── While
    │           │       │   ├── Less
    │           │       │   │   ├── GetVar(i)
    │           │       │   │   └── GetVar(len)
    │           │       │   └── Block
    │           │       │       ├── If
    │           │       │       │   ├── EqualEqual
    │           │       │       │   │   ├── Get(depth)
    │           │       │       │   │   │   └── Index
    │           │       │       │   │   │       ├── GetVar(last_vars)
    │           │       │       │   │   │       └── GetVar(i)
    │           │       │       │   │   └── Field("depth")
    │           │       │       │   └── Block
    │           │       │       │       └── Pop
    │           │       │       │           └── Method: push_code
    │           │       │       │               └── String("Pop")
    │           │       │       ├── If
    │           │       │       │   ├── BangEqual
    │           │       │       │   │   ├── Get(depth)
    │           │       │       │   │   │   └── Index
    │           │       │       │   │   │       ├── GetVar(last_vars)
    │           │       │       │   │   │       └── GetVar(i)
    │           │       │       │   │   └── Field("depth")
    │           │       │       │   └── Block
    │           │       │       │       └── Pop
    │           │       │       │           └── Native: append
    │           │       │       │               ├── GetVar(new_vars)
    │           │       │       │               └── Index
    │           │       │       │                   ├── GetVar(last_vars)
    │           │       │       │                   └── GetVar(i)
    │           │       │       └── Reassign: i
    │           │       │           └── Plus
    │           │       │               ├── GetVar(i)
    │           │       │               └── Int(1)
    │           │       ├── SetField(depth)
    │           │       │   └── Minus
    │           │       │       ├── Field("depth")
    │           │       │       └── Int(1)
    │           │       └── Pop
    │           │           └── Native: append
    │           │               ├── Field("variables")
    │           │               └── GetVar(new_vars)
    │           ├── Method: add_local
    │           │   └── Param: name
    │           │   └── Block
    │           │       ├── Def: vars
    │           │       │   └── Index
    │           │       │       ├── Field("variables")
    │           │       │       └── Minus
    │           │       │           ├── Native: len
    │           │       │           │   └── Field("variables")
    │           │       │           └── Int(1)
    │           │       ├── Def: i
    │           │       │   └── Int(0)
    │           │       ├── Def: res
    │           │       │   └── Nil
    │           │       ├── While
    │           │       │   ├── Less
    │           │       │   │   ├── GetVar(i)
    │           │       │   │   └── Native: len
    │           │       │   │       └── GetVar(vars)
    │           │       │   └── Block
    │           │       │       ├── If
    │           │       │       │   ├── EqualEqual
    │           │       │       │   │   ├── Get(name)
    │           │       │       │   │   │   └── Index
    │           │       │       │   │   │       ├── GetVar(vars)
    │           │       │       │   │   │       └── GetVar(i)
    │           │       │       │   │   └── GetVar(name)
    │           │       │       │   └── Block
    │           │       │       │       └── Pop
    │           │       │       │           └── Native: err
    │           │       │       │               └── Plus
    │           │       │       │                   ├── Plus
    │           │       │       │                   │   ├── String("var with name: ")
    │           │       │       │                   │   └── GetVar(name)
    │           │       │       │                   └── String(" already exists")
    │           │       │       └── Reassign: i
    │           │       │           └── Plus
    │           │       │               ├── GetVar(i)
    │           │       │               └── Int(1)
    │           │       ├── Pop
    │           │       │   └── Native: print
    │           │       │       └── String("the wierd ll thing probably should not be here")
    │           │       └── Pop
    │           │           └── Native: append
    │           │               ├── GetVar(vars)
    │           │               └── Call: Local
    │           │                   ├── GetVar(name)
    │           │                   ├── Field("depth")
    │           │                   └── Native: len
    │           │                       └── GetVar(vars)
    │           ├── Method: get_local
    │           │   └── Param: name
    │           │   └── Block
    │           │       ├── Def: vars
    │           │       │   └── Index
    │           │       │       ├── Field("variables")
    │           │       │       └── Minus
    │           │       │           ├── Native: len
    │           │       │           │   └── Field("variables")
    │           │       │           └── Int(1)
    │           │       ├── Def: i
    │           │       │   └── Int(0)
    │           │       ├── While
    │           │       │   ├── Less
    │           │       │   │   ├── GetVar(i)
    │           │       │   │   └── Native: len
    │           │       │   │       └── GetVar(vars)
    │           │       │   └── Block
    │           │       │       ├── If
    │           │       │       │   ├── EqualEqual
    │           │       │       │   │   ├── Get(name)
    │           │       │       │   │   │   └── Index
    │           │       │       │   │   │       ├── GetVar(vars)
    │           │       │       │   │   │       └── GetVar(i)
    │           │       │       │   │   └── GetVar(name)
    │           │       │       │   └── Block
    │           │       │       │       └── Return
    │           │       │       │           └── Get(stack_pos)
    │           │       │       │               └── Index
    │           │       │       │                   ├── GetVar(vars)
    │           │       │       │                   └── GetVar(i)
    │           │       │       └── Reassign: i
    │           │       │           └── Plus
    │           │       │               ├── GetVar(i)
    │           │       │               └── Int(1)
    │           │       └── Return
    │           │           └── Nil
    │           ├── Method: compile_list
    │           │   └── Param: items
    │           │   └── Block
    │           │       ├── Def: i
    │           │       │   └── Int(0)
    │           │       └── While
    │           │           ├── Less
    │           │           │   ├── GetVar(i)
    │           │           │   └── Native: len
    │           │           │       └── GetVar(items)
    │           │           └── Block
    │           │               ├── Pop
    │           │               │   └── Method: accept
    │           │               │       ├── GetSelf
    │           │               │       └── Index
    │           │               │           ├── GetVar(items)
    │           │               │           └── GetVar(i)
    │           │               └── Reassign: i
    │           │                   └── Plus
    │           │                       ├── GetVar(i)
    │           │                       └── Int(1)
    │           ├── Method: native
    │           │   └── Param: name
    │           │   └── Block
    │           │       ├── If
    │           │       │   ├── EqualEqual
    │           │       │   │   ├── GetVar(name)
    │           │       │   │   └── String("print")
    │           │       │   └── Block
    │           │       │       └── Return
    │           │       │           └── List
    │           │       │               ├── Int(0)
    │           │       │               └── Int(1)
    │           │       ├── If
    │           │       │   ├── EqualEqual
    │           │       │   │   ├── GetVar(name)
    │           │       │   │   └── String("to_string")
    │           │       │   └── Block
    │           │       │       └── Return
    │           │       │           └── List
    │           │       │               ├── Int(1)
    │           │       │               └── Int(1)
    │           │       ├── If
    │           │       │   ├── EqualEqual
    │           │       │   │   ├── GetVar(name)
    │           │       │   │   └── String("read_file")
    │           │       │   └── Block
    │           │       │       └── Return
    │           │       │           └── List
    │           │       │               ├── Int(2)
    │           │       │               └── Int(1)
    │           │       ├── If
    │           │       │   ├── EqualEqual
    │           │       │   │   ├── GetVar(name)
    │           │       │   │   └── String("len")
    │           │       │   └── Block
    │           │       │       └── Return
    │           │       │           └── List
    │           │       │               ├── Int(3)
    │           │       │               └── Int(1)
    │           │       ├── If
    │           │       │   ├── EqualEqual
    │           │       │   │   ├── GetVar(name)
    │           │       │   │   └── String("err")
    │           │       │   └── Block
    │           │       │       └── Return
    │           │       │           └── List
    │           │       │               ├── Int(4)
    │           │       │               └── Int(1)
    │           │       ├── If
    │           │       │   ├── EqualEqual
    │           │       │   │   ├── GetVar(name)
    │           │       │   │   └── String("append")
    │           │       │   └── Block
    │           │       │       └── Return
    │           │       │           └── List
    │           │       │               ├── Int(5)
    │           │       │               └── Int(2)
    │           │       ├── If
    │           │       │   ├── EqualEqual
    │           │       │   │   ├── GetVar(name)
    │           │       │   │   └── String("pop")
    │           │       │   └── Block
    │           │       │       └── Return
    │           │       │           └── List
    │           │       │               ├── Int(6)
    │           │       │               └── Int(1)
    │           │       └── Pop
    │           │           └── Native: err
    │           │               └── Plus
    │           │                   ├── String("no native function with name: ")
    │           │                   └── GetVar(name)
    │           ├── Method: visitAstRoot
    │           │   └── Param: self
    │           │   └── Block
    │           │       ├── Pop
    │           │       │   └── Method: begin_scope
    │           │       ├── Pop
    │           │       │   └── Method: compile_list
    │           │       │       └── Get(nodes)
    │           │       │           └── GetVar(self)
    │           │       └── Pop
    │           │           └── Method: end_scope
    │           ├── Method: visitAstNeg
    │           │   └── Param: self
    │           │   └── Block
    │           │       └── Pop
    │           │           └── Native: err
    │           │               └── String("visitAstNeg - Compiler")
    │           ├── Method: visitAstNot
    │           │   └── Param: self
    │           │   └── Block
    │           │       └── Pop
    │           │           └── Native: err
    │           │               └── String("visitAstNot - Compiler")
    │           ├── Method: visitAstFloat
    │           │   └── Param: self
    │           │   └── Block
    │           │       └── Pop
    │           │           └── Native: err
    │           │               └── String("visitAstFloat - Compiler")
    │           ├── Method: visitAstInt
    │           │   └── Param: self
    │           │   └── Block
    │           │       └── Pop
    │           │           └── Method: push_code
    │           │               └── Plus
    │           │                   ├── Plus
    │           │                   │   ├── String("PushInt(")
    │           │                   │   └── Native: to_string
    │           │                   │       └── Get(value)
    │           │                   │           └── GetVar(self)
    │           │                   └── String(")")
    │           ├── Method: visitAstString
    │           │   └── Param: self
    │           │   └── Block
    │           │       ├── Pop
    │           │       │   └── Method: push_code
    │           │       │       └── Plus
    │           │       │           ├── Plus
    │           │       │           │   ├── String("PushString(")
    │           │       │           │   └── Native: to_string
    │           │       │           │       └── Native: len
    │           │       │           │           └── Field("strings")
    │           │       │           └── String(")")
    │           │       └── Pop
    │           │           └── Native: append
    │           │               ├── Field("strings")
    │           │               └── Get(value)
    │           │                   └── GetVar(self)
    │           ├── Method: visitAstGetField
    │           │   └── Param: self
    │           │   └── Block
    │           │       └── Pop
    │           │           └── Method: push_code
    │           │               └── Plus
    │           │                   ├── String("GetField(")
    │           │                   └── Plus
    │           │                       ├── Get(value)
    │           │                       │   └── GetVar(self)
    │           │                       └── String(")")
    │           ├── Method: visitAstSetField
    │           │   └── Param: self
    │           │   └── Block
    │           │       ├── Pop
    │           │       │   └── Method: accept
    │           │       │       ├── GetSelf
    │           │       │       └── Get(expr)
    │           │       │           └── GetVar(self)
    │           │       └── Pop
    │           │           └── Method: push_code
    │           │               └── Plus
    │           │                   ├── String("SetField(")
    │           │                   └── Plus
    │           │                       ├── Get(name)
    │           │                       │   └── GetVar(self)
    │           │                       └── String(")")
    │           ├── Method: visitAstList
    │           │   └── Param: self
    │           │   └── Block
    │           │       └── Pop
    │           │           └── Native: err
    │           │               └── String("visitAstList - Compiler")
    │           ├── Method: visitAstIndex
    │           │   └── Param: self
    │           │   └── Block
    │           │       └── Pop
    │           │           └── Native: err
    │           │               └── String("visitAstIndex - Compiler")
    │           ├── Method: visitAstIndexSet
    │           │   └── Param: self
    │           │   └── Block
    │           │       └── Pop
    │           │           └── Native: err
    │           │               └── String("visitAstIndexSet - Compiler")
    │           ├── Method: visitAstBool
    │           │   └── Param: self
    │           │   └── Block
    │           │       └── Pop
    │           │           └── Native: err
    │           │               └── String("visitAstBool - Compiler")
    │           ├── Method: visitAstNil
    │           │   └── Param: self
    │           │   └── Block
    │           │       └── Pop
    │           │           └── Native: err
    │           │               └── String("visitAstNil - Compiler")
    │           ├── Method: visitAstGetVar
    │           │   └── Param: self
    │           │   └── Block
    │           │       ├── Def: local
    │           │       │   └── Method: get_local
    │           │       │       └── Get(value)
    │           │       │           └── GetVar(self)
    │           │       ├── If
    │           │       │   ├── BangEqual
    │           │       │   │   ├── GetVar(local)
    │           │       │   │   └── Nil
    │           │       │   └── Block
    │           │       │       └── Pop
    │           │       │           └── Method: push_code
    │           │       │               └── Plus
    │           │       │                   ├── Plus
    │           │       │                   │   ├── String("GetLocal(")
    │           │       │                   │   └── Native: to_string
    │           │       │                   │       └── GetVar(local)
    │           │       │                   └── String(")")
    │           │       └── If
    │           │           ├── EqualEqual
    │           │           │   ├── GetVar(local)
    │           │           │   └── Nil
    │           │           └── Block
    │           │               └── Pop
    │           │                   └── Native: err
    │           │                       └── String("not a local, should be class")
    │           ├── Method: visitAstDef
    │           │   └── Param: self
    │           │   └── Block
    │           │       ├── Pop
    │           │       │   └── Method: accept
    │           │       │       ├── GetSelf
    │           │       │       └── Get(expr)
    │           │       │           └── GetVar(self)
    │           │       └── Pop
    │           │           └── Method: add_local
    │           │               └── Get(name)
    │           │                   └── GetVar(self)
    │           ├── Method: visitAstPlus
    │           │   └── Param: self
    │           │   └── Block
    │           │       ├── Pop
    │           │       │   └── Method: accept
    │           │       │       ├── GetSelf
    │           │       │       └── Get(lhs)
    │           │       │           └── GetVar(self)
    │           │       ├── Pop
    │           │       │   └── Method: accept
    │           │       │       ├── GetSelf
    │           │       │       └── Get(rhs)
    │           │       │           └── GetVar(self)
    │           │       └── Pop
    │           │           └── Method: push_code
    │           │               └── String("Plus")
    │           ├── Method: visitAstClass
    │           │   └── Param: self
    │           │   └── Block
    │           │       ├── SetField(current_class_name)
    │           │       │   └── Get(name)
    │           │       │       └── GetVar(self)
    │           │       ├── SetField(current_fields)
    │           │       │   └── Get(fields)
    │           │       │       └── GetVar(self)
    │           │       ├── Def: jump
    │           │       │   └── Native: len
    │           │       │       └── Field("code")
    │           │       ├── Pop
    │           │       │   └── Method: push_code
    │           │       │       └── String("Jump()")
    │           │       ├── If
    │           │       │   ├── BangEqual
    │           │       │   │   ├── Method: find_class
    │           │       │   │   │   └── Get(name)
    │           │       │   │   │       └── GetVar(self)
    │           │       │   │   └── Nil
    │           │       │   └── Block
    │           │       │       └── Pop
    │           │       │           └── Native: err
    │           │       │               └── Plus
    │           │       │                   ├── String("Class '")
    │           │       │                   └── Plus
    │           │       │                       ├── Get(name)
    │           │       │                       │   └── GetVar(self)
    │           │       │                       └── String("' is already defined")
    │           │       ├── Def: methods
    │           │       │   └── List
    │           │       ├── Def: i
    │           │       │   └── Int(0)
    │           │       ├── While
    │           │       │   ├── Less
    │           │       │   │   ├── GetVar(i)
    │           │       │   │   └── Native: len
    │           │       │   │       └── Get(methods)
    │           │       │   │           └── GetVar(self)
    │           │       │   └── Block
    │           │       │       ├── Pop
    │           │       │       │   └── Method: begin_method
    │           │       │       ├── Def: method
    │           │       │       │   └── Index
    │           │       │       │       ├── Get(methods)
    │           │       │       │       │   └── GetVar(self)
    │           │       │       │       └── GetVar(i)
    │           │       │       ├── Def: j
    │           │       │       │   └── Int(0)
    │           │       │       ├── While
    │           │       │       │   ├── Less
    │           │       │       │   │   ├── GetVar(j)
    │           │       │       │   │   └── Native: len
    │           │       │       │   │       └── Get(params)
    │           │       │       │   │           └── GetVar(method)
    │           │       │       │   └── Block
    │           │       │       │       ├── Pop
    │           │       │       │       │   └── Method: add_local
    │           │       │       │       │       └── Index
    │           │       │       │       │           ├── Get(params)
    │           │       │       │       │           │   └── GetVar(method)
    │           │       │       │       │           └── GetVar(j)
    │           │       │       │       └── Reassign: j
    │           │       │       │           └── Plus
    │           │       │       │               ├── GetVar(j)
    │           │       │       │               └── Int(1)
    │           │       │       ├── Def: code_start
    │           │       │       │   └── Native: len
    │           │       │       │       └── Field("code")
    │           │       │       ├── Pop
    │           │       │       │   └── Method: accept
    │           │       │       │       ├── GetSelf
    │           │       │       │       └── Get(block)
    │           │       │       │           └── GetVar(method)
    │           │       │       ├── Def: cm
    │           │       │       │   └── Call: CompilerMethod
    │           │       │       │       ├── Get(name)
    │           │       │       │       │   └── GetVar(method)
    │           │       │       │       └── GetVar(code_start)
    │           │       │       ├── Pop
    │           │       │       │   └── Native: append
    │           │       │       │       ├── GetVar(methods)
    │           │       │       │       └── GetVar(cm)
    │           │       │       ├── Pop
    │           │       │       │   └── Method: push_code
    │           │       │       │       └── String("PushNil")
    │           │       │       ├── Pop
    │           │       │       │   └── Method: push_code
    │           │       │       │       └── String("Return")
    │           │       │       ├── Reassign: i
    │           │       │       │   └── Plus
    │           │       │       │       ├── GetVar(i)
    │           │       │       │       └── Int(1)
    │           │       │       └── Pop
    │           │       │           └── Method: end_method
    │           │       ├── Def: end
    │           │       │   └── Native: len
    │           │       │       └── Field("code")
    │           │       ├── IndexSet
    │           │       │   ├── Field("code")
    │           │       │   ├── GetVar(jump)
    │           │       │   └── Plus
    │           │       │       ├── Plus
    │           │       │       │   ├── String("Jump(")
    │           │       │       │   └── Native: to_string
    │           │       │       │       └── GetVar(end)
    │           │       │       └── String(")")
    │           │       ├── SetField(current_class_name)
    │           │       │   └── Nil
    │           │       ├── SetField(current_fields)
    │           │       │   └── Nil
    │           │       ├── Def: klass
    │           │       │   └── Call: CompilerClass
    │           │       │       ├── Get(name)
    │           │       │       │   └── GetVar(self)
    │           │       │       ├── Get(fields)
    │           │       │       │   └── GetVar(self)
    │           │       │       └── GetVar(methods)
    │           │       └── Pop
    │           │           └── Native: append
    │           │               ├── Field("classes")
    │           │               └── GetVar(klass)
    │           ├── Method: visitAstBlock
    │           │   └── Param: self
    │           │   └── Block
    │           │       ├── Pop
    │           │       │   └── Method: begin_scope
    │           │       ├── Pop
    │           │       │   └── Method: compile_list
    │           │       │       └── Get(stmts)
    │           │       │           └── GetVar(self)
    │           │       └── Pop
    │           │           └── Method: end_scope
    │           ├── Method: visitAstReassign
    │           │   └── Param: self
    │           │   └── Block
    │           │       ├── Def: local
    │           │       │   └── Method: get_local
    │           │       │       └── Get(name)
    │           │       │           └── GetVar(self)
    │           │       ├── If
    │           │       │   ├── EqualEqual
    │           │       │   │   ├── GetVar(local)
    │           │       │   │   └── Nil
    │           │       │   └── Block
    │           │       │       └── Pop
    │           │       │           └── Native: err
    │           │       │               └── Plus
    │           │       │                   ├── String("Could not find variable: ")
    │           │       │                   └── Get(name)
    │           │       │                       └── GetVar(self)
    │           │       ├── Pop
    │           │       │   └── Method: accept
    │           │       │       ├── GetSelf
    │           │       │       └── Get(expr)
    │           │       │           └── GetVar(self)
    │           │       └── Pop
    │           │           └── Method: push_code
    │           │               └── Plus
    │           │                   ├── Plus
    │           │                   │   ├── String("SetLocal(")
    │           │                   │   └── Native: to_string
    │           │                   │       └── GetVar(local)
    │           │                   └── String(")")
    │           ├── Method: visitAstInstance
    │           │   └── Param: self
    │           │   └── Block
    │           │       ├── Def: klass
    │           │       │   └── Method: find_class
    │           │       │       └── Get(name)
    │           │       │           └── GetVar(self)
    │           │       ├── If
    │           │       │   ├── EqualEqual
    │           │       │   │   ├── GetVar(klass)
    │           │       │   │   └── Nil
    │           │       │   └── Block
    │           │       │       └── Pop
    │           │       │           └── Native: err
    │           │       │               └── Plus
    │           │       │                   ├── String("Could not find class: ")
    │           │       │                   └── Get(name)
    │           │       │                       └── GetVar(self)
    │           │       ├── If
    │           │       │   ├── BangEqual
    │           │       │   │   ├── Native: len
    │           │       │   │   │   └── Get(fields)
    │           │       │   │   │       └── GetVar(klass)
    │           │       │   │   └── Native: len
    │           │       │   │       └── Get(args)
    │           │       │   │           └── GetVar(self)
    │           │       │   └── Block
    │           │       │       └── Pop
    │           │       │           └── Native: err
    │           │       │               └── String("Arity does not match")
    │           │       ├── Def: fields_rev
    │           │       │   └── List
    │           │       ├── Def: i
    │           │       │   └── Minus
    │           │       │       ├── Native: len
    │           │       │       │   └── Get(fields)
    │           │       │       │       └── GetVar(klass)
    │           │       │       └── Int(1)
    │           │       ├── While
    │           │       │   ├── GreaterEqual
    │           │       │   │   ├── GetVar(i)
    │           │       │   │   └── Int(0)
    │           │       │   └── Block
    │           │       │       ├── Pop
    │           │       │       │   └── Native: append
    │           │       │       │       ├── GetVar(fields_rev)
    │           │       │       │       └── Index
    │           │       │       │           ├── Get(fields)
    │           │       │       │           │   └── GetVar(klass)
    │           │       │       │           └── GetVar(i)
    │           │       │       └── Reassign: i
    │           │       │           └── Minus
    │           │       │               ├── GetVar(i)
    │           │       │               └── Int(1)
    │           │       ├── Def: names
    │           │       │   └── List
    │           │       ├── Def: starts
    │           │       │   └── List
    │           │       ├── Reassign: i
    │           │       │   └── Int(0)
    │           │       ├── While
    │           │       │   ├── Less
    │           │       │   │   ├── GetVar(i)
    │           │       │   │   └── Native: len
    │           │       │   │       └── Get(methods)
    │           │       │   │           └── GetVar(klass)
    │           │       │   └── Block
    │           │       │       ├── Pop
    │           │       │       │   └── Native: append
    │           │       │       │       ├── GetVar(names)
    │           │       │       │       └── Get(name)
    │           │       │       │           └── Index
    │           │       │       │               ├── Get(methods)
    │           │       │       │               │   └── GetVar(klass)
    │           │       │       │               └── GetVar(i)
    │           │       │       ├── Pop
    │           │       │       │   └── Native: append
    │           │       │       │       ├── GetVar(starts)
    │           │       │       │       └── Get(code_start)
    │           │       │       │           └── Index
    │           │       │       │               ├── Get(methods)
    │           │       │       │               │   └── GetVar(klass)
    │           │       │       │               └── GetVar(i)
    │           │       │       └── Reassign: i
    │           │       │           └── Plus
    │           │       │               ├── GetVar(i)
    │           │       │               └── Int(1)
    │           │       ├── Pop
    │           │       │   └── Method: compile_list
    │           │       │       └── Get(args)
    │           │       │           └── GetVar(self)
    │           │       └── Pop
    │           │           └── Method: push_code
    │           │               └── Plus
    │           │                   ├── Plus
    │           │                   │   ├── Plus
    │           │                   │   │   ├── Plus
    │           │                   │   │   │   ├── Plus
    │           │                   │   │   │   │   ├── Plus
    │           │                   │   │   │   │   │   ├── String("Instance(")
    │           │                   │   │   │   │   │   └── Native: to_string
    │           │                   │   │   │   │   │       └── GetVar(fields_rev)
    │           │                   │   │   │   │   └── String(", ")
    │           │                   │   │   │   └── Native: to_string
    │           │                   │   │   │       └── GetVar(names)
    │           │                   │   │   └── String(", ")
    │           │                   │   └── Native: to_string
    │           │                   │       └── GetVar(starts)
    │           │                   └── String(")")
    │           ├── Method: visitAstNative
    │           │   └── Param: self
    │           │   └── Block
    │           │       ├── Def: fn_info
    │           │       │   └── Method: native
    │           │       │       └── Get(name)
    │           │       │           └── GetVar(self)
    │           │       ├── If
    │           │       │   ├── And
    │           │       │   │   ├── BangEqual
    │           │       │   │   │   ├── Get(name)
    │           │       │   │   │   │   └── GetVar(self)
    │           │       │   │   │   └── String("print")
    │           │       │   │   └── BangEqual
    │           │       │   │       ├── Native: len
    │           │       │   │       │   └── Get(args)
    │           │       │   │       │       └── GetVar(self)
    │           │       │   │       └── Index
    │           │       │   │           ├── GetVar(fn_info)
    │           │       │   │           └── Int(1)
    │           │       │   └── Block
    │           │       │       └── Pop
    │           │       │           └── Native: err
    │           │       │               └── String("arity does not match")
    │           │       ├── Pop
    │           │       │   └── Method: compile_list
    │           │       │       └── Get(args)
    │           │       │           └── GetVar(self)
    │           │       ├── If
    │           │       │   ├── EqualEqual
    │           │       │   │   ├── Get(name)
    │           │       │   │   │   └── GetVar(self)
    │           │       │   │   └── String("print")
    │           │       │   └── Block
    │           │       │       └── Pop
    │           │       │           └── Method: push_code
    │           │       │               └── Plus
    │           │       │                   ├── Plus
    │           │       │                   │   ├── String("Print(")
    │           │       │                   │   └── Native: to_string
    │           │       │                   │       └── Native: len
    │           │       │                   │           └── Get(args)
    │           │       │                   │               └── GetVar(self)
    │           │       │                   └── String(")")
    │           │       └── If
    │           │           ├── BangEqual
    │           │           │   ├── Get(name)
    │           │           │   │   └── GetVar(self)
    │           │           │   └── String("print")
    │           │           └── Block
    │           │               └── Pop
    │           │                   └── Method: push_code
    │           │                       └── Plus
    │           │                           ├── Plus
    │           │                           │   ├── String("Native(")
    │           │                           │   └── Native: to_string
    │           │                           │       └── Index
    │           │                           │           ├── GetVar(fn_info)
    │           │                           │           └── Int(1)
    │           │                           └── String(")")
    │           ├── Method: visitAstMethod
    │           │   └── Param: self
    │           │   └── Block
    │           │       ├── If
    │           │       │   ├── BangEqual
    │           │       │   │   ├── Get(lhs)
    │           │       │   │   │   └── GetVar(self)
    │           │       │   │   └── Nil
    │           │       │   └── Block
    │           │       │       └── Pop
    │           │       │           └── Method: accept
    │           │       │               ├── GetSelf
    │           │       │               └── Get(lhs)
    │           │       │                   └── GetVar(self)
    │           │       ├── If
    │           │       │   ├── EqualEqual
    │           │       │   │   ├── Get(lhs)
    │           │       │   │   │   └── GetVar(self)
    │           │       │   │   └── Nil
    │           │       │   └── Block
    │           │       │       └── Pop
    │           │       │           └── Method: push_code
    │           │       │               └── String("PushSelf")
    │           │       ├── Pop
    │           │       │   └── Method: compile_list
    │           │       │       └── Get(args)
    │           │       │           └── GetVar(self)
    │           │       └── Pop
    │           │           └── Method: push_code
    │           │               └── Plus
    │           │                   ├── String("Call(")
    │           │                   └── Plus
    │           │                       ├── Plus
    │           │                       │   ├── Plus
    │           │                       │   │   ├── Get(name)
    │           │                       │   │   │   └── GetVar(self)
    │           │                       │   │   └── String(", ")
    │           │                       │   └── Native: to_string
    │           │                       │       └── Plus
    │           │                       │           ├── Native: len
    │           │                       │           │   └── Get(args)
    │           │                       │           │       └── GetVar(self)
    │           │                       │           └── Int(1)
    │           │                       └── String(")")
    │           ├── Method: visitAstPop
    │           │   └── Param: self
    │           │   └── Block
    │           │       ├── Pop
    │           │       │   └── Method: accept
    │           │       │       ├── GetSelf
    │           │       │       └── Get(expr)
    │           │       │           └── GetVar(self)
    │           │       └── Pop
    │           │           └── Method: push_code
    │           │               └── String("Pop")
    │           ├── Method: visitAstEqualEqual
    │           │   └── Param: self
    │           │   └── Block
    │           │       └── Pop
    │           │           └── Native: err
    │           │               └── String("visitAstEqualEqual - Compiler")
    │           ├── Method: visitAstIf
    │           │   └── Param: self
    │           │   └── Block
    │           │       └── Pop
    │           │           └── Native: err
    │           │               └── String("visitAstIf - Compiler")
    │           ├── Method: visitAstReturn
    │           │   └── Param: self
    │           │   └── Block
    │           │       └── Pop
    │           │           └── Native: err
    │           │               └── String("visitAstReturn - Compiler")
    │           ├── Method: visitAstWhile
    │           │   └── Param: self
    │           │   └── Block
    │           │       ├── Def: loop_start
    │           │       │   └── Native: len
    │           │       │       └── Field("code")
    │           │       ├── Pop
    │           │       │   └── Method: accept
    │           │       │       ├── GetSelf
    │           │       │       └── Get(condition)
    │           │       │           └── GetVar(self)
    │           │       ├── Def: exit_jump
    │           │       │   └── Native: len
    │           │       │       └── Field("code")
    │           │       ├── Pop
    │           │       │   └── Method: push_code
    │           │       │       └── String("JumpIfFalse()")
    │           │       ├── Pop
    │           │       │   └── Method: accept
    │           │       │       ├── GetSelf
    │           │       │       └── Get(block)
    │           │       │           └── GetVar(self)
    │           │       ├── Pop
    │           │       │   └── Method: push_code
    │           │       │       └── Plus
    │           │       │           ├── Plus
    │           │       │           │   ├── String("Jump(")
    │           │       │           │   └── Native: to_string
    │           │       │           │       └── GetVar(loop_start)
    │           │       │           └── String(")")
    │           │       └── IndexSet
    │           │           ├── Field("code")
    │           │           ├── GetVar(exit_jump)
    │           │           └── Plus
    │           │               ├── Plus
    │           │               │   ├── String("JumpIfFalse(")
    │           │               │   └── Native: to_string
    │           │               │       └── Native: len
    │           │               │           └── Field("code")
    │           │               └── String(")")
    │           ├── Method: visitAstOr
    │           │   └── Param: self
    │           │   └── Block
    │           │       └── Pop
    │           │           └── Native: err
    │           │               └── String("visitAstOr - Compiler")
    │           ├── Method: visitAstAnd
    │           │   └── Param: self
    │           │   └── Block
    │           │       └── Pop
    │           │           └── Native: err
    │           │               └── String("visitAstAnd - Compiler")
    │           ├── Method: visitAstBangEqual
    │           │   └── Param: self
    │           │   └── Block
    │           │       └── Pop
    │           │           └── Native: err
    │           │               └── String("visitAstBangEqual - Compiler")
    │           ├── Method: visitAstGreater
    │           │   └── Param: self
    │           │   └── Block
    │           │       └── Pop
    │           │           └── Native: err
    │           │               └── String("visitAstGreater - Compiler")
    │           ├── Method: visitAstGreaterEqual
    │           │   └── Param: self
    │           │   └── Block
    │           │       └── Pop
    │           │           └── Native: err
    │           │               └── String("visitAstGreaterEqual - Compiler")
    │           ├── Method: visitAstLess
    │           │   └── Param: self
    │           │   └── Block
    │           │       ├── Pop
    │           │       │   └── Method: accept
    │           │       │       ├── GetSelf
    │           │       │       └── Get(lhs)
    │           │       │           └── GetVar(self)
    │           │       ├── Pop
    │           │       │   └── Method: accept
    │           │       │       ├── GetSelf
    │           │       │       └── Get(rhs)
    │           │       │           └── GetVar(self)
    │           │       └── Pop
    │           │           └── Method: push_code
    │           │               └── String("Less")
    │           ├── Method: visitAstLessEqual
    │           │   └── Param: self
    │           │   └── Block
    │           │       └── Pop
    │           │           └── Native: err
    │           │               └── String("visitAstLessEqual - Compiler")
    │           ├── Method: visitAstGet
    │           │   └── Param: self
    │           │   └── Block
    │           │       ├── Pop
    │           │       │   └── Method: accept
    │           │       │       ├── GetSelf
    │           │       │       └── Get(lhs)
    │           │       │           └── GetVar(self)
    │           │       └── Pop
    │           │           └── Method: push_code
    │           │               └── Plus
    │           │                   ├── String("Get(")
    │           │                   └── Plus
    │           │                       ├── Get(field)
    │           │                       │   └── GetVar(self)
    │           │                       └── String(")")
    │           └── Method: visitAstSet
    │               └── Param: self
    │               └── Block
    │                   ├── Pop
    │                   │   └── Method: accept
    │                   │       ├── GetSelf
    │                   │       └── Get(lhs)
    │                   │           └── GetVar(self)
    │                   ├── Pop
    │                   │   └── Method: accept
    │                   │       ├── GetSelf
    │                   │       └── Get(rhs)
    │                   │           └── GetVar(self)
    │                   └── Pop
    │                       └── Method: push_code
    │                           └── Plus
    │                               ├── String("Set(")
    │                               └── Plus
    │                                   ├── Get(field)
    │                                   │   └── GetVar(self)
    │                                   └── String(")")
    ├── Def: input
    │   └── Native: read_file
    │       └── String("lum/sample.lum")
    ├── Pop
    │   └── Native: print
    │       ├── String("input:")
    │       └── GetVar(input)
    ├── Def: lexer
    │   └── Call: Lexer
    │       ├── GetVar(input)
    │       └── Int(0)
    ├── Reassign: lexer
    │   └── Call: Peekable
    │       ├── GetVar(lexer)
    │       └── Nil
    ├── Def: parser
    │   └── Call: Parser
    │       └── GetVar(lexer)
    ├── Def: root
    │   └── Method: parse_root
    │       └── GetVar(parser)
    ├── Def: printer
    │   └── Call: AstPrinter
    │       ├── List
    │       ├── Bool(true)
    │       ├── String("└──")
    │       ├── String("├──")
    │       └── String("│  ")
    ├── Pop
    │   └── Method: accept
    │       ├── GetVar(printer)
    │       └── GetVar(root)
    ├── Def: compiler
    │   └── Call: Compiler
    │       ├── Nil
    │       ├── Nil
    │       ├── Nil
    │       ├── Nil
    │       ├── Nil
    │       ├── Nil
    │       └── Nil
    ├── Pop
    │   └── Method: init
    │       └── GetVar(compiler)
    ├── Pop
    │   └── Method: accept
    │       ├── GetVar(compiler)
    │       └── GetVar(root)
    └── Pop
        └── Native: print
            ├── String("Bytecode:")
            └── Get(code)
                └── GetVar(compiler)

Bytecode: [Jump(240), PushInt(0), Return, PushNil, Return, PushInt(1), Return, PushNil, Return, PushInt(2), Return, PushNil, Return, PushInt(3), Return, PushNil, Return, PushInt(4), Return, PushNil, Return, PushInt(5), Return, PushNil, Return, PushInt(6), Return, PushNil, Return, PushInt(7), Return, PushNil, Return, PushInt(8), Return, PushNil, Return, PushInt(9), Return, PushNil, Return, PushInt(10), Return, PushNil, Return, PushInt(11), Return, PushNil, Return, PushInt(12), Return, PushNil, Return, PushInt(13), Return, PushNil, Return, PushInt(14), Return, PushNil, Return, PushInt(15), Return, PushNil, Return, PushInt(16), Return, PushNil, Return, PushInt(17), Return, PushNil, Return, PushInt(18), Return, PushNil, Return, PushInt(19), Return, PushNil, Return, PushInt(20), Return, PushNil, Return, PushInt(21), Return, PushNil, Return, PushInt(22), Return, PushNil, Return, PushInt(23), Return, PushNil, Return, PushInt(24), Return, PushNil, Return, PushInt(25), Return, PushNil, Return, PushInt(26), Return, PushNil, Return, PushInt(27), Return, PushNil, Return, PushInt(28), Return, PushNil, Return, PushInt(29), Return, PushNil, Return, PushInt(30), Return, PushNil, Return, PushInt(31), Return, PushNil, Return, PushInt(32), Return, PushNil, Return, PushInt(33), Return, PushNil, Return, PushInt(34), Return, PushNil, Return, PushInt(35), Return, PushNil, Return, PushInt(36), Return, PushNil, Return, PushInt(37), Return, PushNil, Return, PushInt(38), Return, PushNil, Return, PushInt(40), Return, PushNil, Return, PushInt(41), Return, PushNil, Return, PushInt(42), Return, PushNil, Return, PushInt(43), Return, PushNil, Return, PushInt(44), Return, PushNil, Return, PushString(0), PushString(1), PushString(2), PushString(3), PushString(4), PushString(5), PushString(6), PushString(7), PushString(8), PushString(9), PushString(10), PushString(11), PushString(12), PushString(13), PushString(14), PushString(15), PushString(16), PushString(17), PushString(18), PushString(19), PushString(20), PushString(21), PushString(22), PushString(23), PushString(24), PushString(25), PushString(26), PushString(27), PushString(28), PushString(29), PushString(30), PushString(31), PushString(32), PushString(33), PushString(34), PushString(35), PushString(36), List(37), PushInt(0), GetLocal(3), GetLocal(2), Native(3), Less, JumpIfFalse(234), GetLocal(1), GetLocal(2), GetLocal(3), IndexGet, Equals, JumpIfFalse(229), GetLocal(3), Return, GetLocal(3), PushInt(1), Plus, SetLocal(3), Jump(216), PushNil, Return, Pop, Pop, PushNil, Return, Jump(241), Jump(563), GetField("p"), GetField("code"), Native(3), Less, GetField("code"), GetField("p"), IndexGet, PushString(37), Equals, And, JumpIfFalse(258), GetField("p"), PushInt(1), Plus, SetField("p"), Jump(242), PushNil, Return, GetField("p"), GetField("code"), Native(3), GreaterEqual, Return, PushNil, Return, PushSelf, Call("is_done", 1), JumpIfFalse(272), PushBool(false), Return, PushString(38), PushInt(0), GetLocal(2), GetLocal(1), Native(3), Less, JumpIfFalse(294), GetLocal(1), GetLocal(2), IndexGet, GetField("code"), GetField("p"), IndexGet, Equals, JumpIfFalse(289), PushBool(true), Return, GetLocal(2), PushInt(1), Plus, SetLocal(2), Jump(274), PushBool(false), Return, Pop, Pop, PushNil, Return, PushSelf, Call("is_done", 1), JumpIfFalse(305), PushBool(false), Return, PushString(39), PushInt(0), GetLocal(2), GetLocal(1), Native(3), Less, JumpIfFalse(327), GetLocal(1), GetLocal(2), IndexGet, GetField("code"), GetField("p"), IndexGet, Equals, JumpIfFalse(322), PushBool(true), Return, GetLocal(2), PushInt(1), Plus, SetLocal(2), Jump(307), PushBool(false), Return, Pop, Pop, PushNil, Return, GetField("p"), GetField("code"), Native(3), Less, JumpIfFalse(342), GetField("p"), PushInt(1), Plus, SetField("p"), PushNil, Return, GetField("p"), PushString(40), PushSelf, Call("letter", 1), JumpIfFalse(360), GetLocal(2), GetField("code"), GetField("p"), IndexGet, Plus, SetLocal(2), GetField("p"), PushInt(1), Plus, SetField("p"), Jump(346), GetField("p"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), GetLocal(2), Call("from_str", 2), GetLocal(4), PushNil, NotEquals, JumpIfFalse(374), GetLocal(2), GetLocal(1), GetLocal(3), GetLocal(4), Instance(["kind", "end", "start", "value"], [], []), Return, GetLocal(2), GetLocal(1), GetLocal(3), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Identifier", 1), Instance(["kind", "end", "start", "value"], [], []), Return, Pop, Pop, Pop, Pop, PushNil, Return, GetField("p"), PushString(41), PushBool(false), PushSelf, Call("digit", 1), GetField("code"), GetField("p"), IndexGet, PushString(42), Equals, Or, JumpIfFalse(418), GetField("code"), GetField("p"), IndexGet, PushString(43), Equals, JumpIfFalse(407), PushBool(true), SetLocal(3), GetLocal(2), GetField("code"), GetField("p"), IndexGet, Plus, SetLocal(2), GetField("p"), PushInt(1), Plus, SetField("p"), Jump(390), GetField("p"), GetLocal(3), JumpIfFalse(428), GetLocal(2), GetLocal(1), GetLocal(4), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Float", 1), Instance(["kind", "end", "start", "value"], [], []), Return, GetLocal(2), GetLocal(1), GetLocal(4), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Int", 1), Instance(["kind", "end", "start", "value"], [], []), Return, Pop, Pop, Pop, Pop, PushNil, Return, GetField("p"), PushString(44), GetField("p"), PushInt(1), Plus, SetField("p"), GetField("code"), GetField("p"), IndexGet, PushString(45), NotEquals, JumpIfFalse(464), GetLocal(2), GetField("code"), GetField("p"), IndexGet, Plus, SetLocal(2), GetField("p"), PushInt(1), Plus, SetField("p"), Jump(447), GetLocal(2), PushString(46), Plus, SetLocal(2), GetField("p"), PushInt(1), Plus, SetField("p"), GetField("p"), GetLocal(2), GetLocal(1), GetLocal(3), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("String", 1), Instance(["kind", "end", "start", "value"], [], []), Return, Pop, Pop, Pop, PushNil, Return, Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), GetField("code"), GetField("p"), IndexGet, Call("from_str", 2), GetLocal(1), PushNil, NotEquals, JumpIfFalse(504), GetField("code"), GetField("p"), IndexGet, GetField("p"), GetField("p"), PushInt(1), Plus, GetLocal(1), Instance(["kind", "end", "start", "value"], [], []), Return, PushNil, Return, Pop, PushNil, Return, PushSelf, Call("is_done", 1), JumpIfFalse(514), PushNil, Return, PushSelf, Call("whitespace", 1), Pop, PushSelf, Call("is_done", 1), Not, JumpIfFalse(559), PushSelf, Call("letter", 1), JumpIfFalse(527), PushSelf, Call("identifier", 1), Return, PushSelf, Call("digit", 1), JumpIfFalse(533), PushSelf, Call("number", 1), Return, PushSelf, Call("single_char", 1), GetLocal(1), PushNil, NotEquals, JumpIfFalse(545), GetField("p"), PushInt(1), Plus, SetField("p"), GetLocal(1), Return, GetField("code"), GetField("p"), IndexGet, PushString(47), Equals, JumpIfFalse(554), PushSelf, Call("string", 1), Return, PushSelf, Call("advance", 1), Pop, Pop, Jump(517), PushNil, Return, PushNil, Return, Jump(590), GetField("peek_item"), PushNil, NotEquals, JumpIfFalse(574), GetField("peek_item"), PushNil, SetField("peek_item"), GetLocal(1), Return, Pop, GetField("item"), Call("next", 1), Return, PushNil, Return, GetField("peek_item"), PushNil, Equals, JumpIfFalse(586), GetField("item"), Call("next", 1), SetField("peek_item"), GetField("peek_item"), Return, PushNil, Return, Jump(597), GetLocal(1), PushSelf, Call("visitAstRoot", 2), Return, PushNil, Return, Jump(604), GetLocal(1), PushSelf, Call("visitAstNeg", 2), Return, PushNil, Return, Jump(611), GetLocal(1), PushSelf, Call("visitAstNot", 2), Return, PushNil, Return, Jump(618), GetLocal(1), PushSelf, Call("visitAstFloat", 2), Return, PushNil, Return, Jump(625), GetLocal(1), PushSelf, Call("visitAstInt", 2), Return, PushNil, Return, Jump(632), GetLocal(1), PushSelf, Call("visitAstString", 2), Return, PushNil, Return, Jump(639), GetLocal(1), PushSelf, Call("visitAstGetField", 2), Return, PushNil, Return, Jump(646), GetLocal(1), PushSelf, Call("visitAstSetField", 2), Return, PushNil, Return, Jump(653), GetLocal(1), PushSelf, Call("visitAstList", 2), Return, PushNil, Return, Jump(664), GetLocal(1), PushSelf, Call("visitAstIndex", 2), Return, PushNil, Return, PushString(48), Return, PushNil, Return, Jump(671), GetLocal(1), PushSelf, Call("visitAstIndexSet", 2), Return, PushNil, Return, Jump(678), GetLocal(1), PushSelf, Call("visitAstBool", 2), Return, PushNil, Return, Jump(685), GetLocal(1), PushSelf, Call("visitAstNil", 2), Return, PushNil, Return, Jump(696), GetLocal(1), PushSelf, Call("visitAstGetVar", 2), Return, PushNil, Return, PushString(49), Return, PushNil, Return, Jump(703), GetLocal(1), PushSelf, Call("visitAstDef", 2), Return, PushNil, Return, Jump(710), GetLocal(1), PushSelf, Call("visitAstPlus", 2), Return, PushNil, Return, Jump(717), GetLocal(1), PushSelf, Call("visitAstMinus", 2), Return, PushNil, Return, Jump(724), GetLocal(1), PushSelf, Call("visitAstClass", 2), Return, PushNil, Return, Jump(731), GetLocal(1), PushSelf, Call("visitAstBlock", 2), Return, PushNil, Return, Jump(738), GetLocal(1), PushSelf, Call("visitAstReassign", 2), Return, PushNil, Return, Jump(745), GetLocal(1), PushSelf, Call("visitAstInstance", 2), Return, PushNil, Return, Jump(752), GetLocal(1), PushSelf, Call("visitAstNative", 2), Return, PushNil, Return, Jump(763), GetLocal(1), PushSelf, Call("visitAstMethod", 2), Return, PushNil, Return, PushString(50), Return, PushNil, Return, Jump(770), GetLocal(1), PushSelf, Call("visitAstPop", 2), Return, PushNil, Return, Jump(777), GetLocal(1), PushSelf, Call("visitAstEqualEqual", 2), Return, PushNil, Return, Jump(784), GetLocal(1), PushSelf, Call("visitAstIf", 2), Return, PushNil, Return, Jump(791), GetLocal(1), PushSelf, Call("visitAstReturn", 2), Return, PushNil, Return, Jump(798), GetLocal(1), PushSelf, Call("visitAstWhile", 2), Return, PushNil, Return, Jump(805), GetLocal(1), PushSelf, Call("visitAstOr", 2), Return, PushNil, Return, Jump(812), GetLocal(1), PushSelf, Call("visitAstAnd", 2), Return, PushNil, Return, Jump(819), GetLocal(1), PushSelf, Call("visitAstBangEqual", 2), Return, PushNil, Return, Jump(826), GetLocal(1), PushSelf, Call("visitAstGreater", 2), Return, PushNil, Return, Jump(833), GetLocal(1), PushSelf, Call("visitAstGreaterEqual", 2), Return, PushNil, Return, Jump(840), GetLocal(1), PushSelf, Call("visitAstLess", 2), Return, PushNil, Return, Jump(847), GetLocal(1), PushSelf, Call("visitAstLessEqual", 2), Return, PushNil, Return, Jump(858), GetLocal(1), PushSelf, Call("visitAstGet", 2), Return, PushNil, Return, PushString(51), Return, PushNil, Return, Jump(869), GetLocal(1), PushSelf, Call("visitAstSet", 2), Return, PushNil, Return, PushString(52), Return, PushNil, Return, Jump(876), GetLocal(1), PushSelf, Call("visitAstSet", 2), Return, PushNil, Return, Jump(877), Jump(1968), GetField("lexer"), Call("next", 1), GetLocal(1), GetLocal(2), Get("kind"), NotEquals, JumpIfFalse(897), PushString(53), GetLocal(1), Native(1), Plus, PushString(54), Plus, GetLocal(2), Get("kind"), Native(1), Plus, Native(4), Pop, Pop, PushNil, Return, GetField("lexer"), Call("next", 1), GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Identifier", 1), NotEquals, JumpIfFalse(915), PushString(55), GetLocal(1), Get("kind"), Native(1), Plus, Native(4), Pop, GetLocal(1), Get("value"), Return, Pop, PushNil, Return, GetLocal(1), PushNil, Equals, JumpIfFalse(927), PushInt(0), Return, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Equal", 1), Equals, JumpIfFalse(935), PushInt(1), Return, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Or", 1), Equals, JumpIfFalse(943), PushInt(3), Return, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("And", 1), Equals, JumpIfFalse(951), PushInt(4), Return, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("BangEqual", 1), Equals, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("EqualEqual", 1), Equals, Or, JumpIfFalse(965), PushInt(5), Return, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Greater", 1), Equals, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("GreaterEqual", 1), Equals, Or, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Less", 1), Equals, Or, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("LessEqual", 1), Equals, Or, JumpIfFalse(991), PushInt(6), Return, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Plus", 1), Equals, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Minus", 1), Equals, Or, JumpIfFalse(1005), PushInt(7), Return, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Star", 1), Equals, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Slash", 1), Equals, Or, JumpIfFalse(1019), PushInt(8), Return, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("LeftParen", 1), Equals, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("LeftBracket", 1), Equals, Or, JumpIfFalse(1033), PushInt(10), Return, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Dot", 1), Equals, JumpIfFalse(1041), PushInt(11), Return, PushInt(0), Return, PushNil, Return, GetField("lexer"), Call("peek", 1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Identifier", 1), Equals, JumpIfFalse(1058), PushSelf, Call("consume_identifier", 1), GetLocal(1), Instance(["value"], ["accept"], [633]), Return, Pop, Instance([], ["accept"], [870]), Return, PushString(56), Native(4), Pop, PushNil, Return, GetField("lexer"), Call("next", 1), GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Minus", 1), Equals, JumpIfFalse(1076), PushString(57), Native(4), Pop, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Bang", 1), Equals, JumpIfFalse(1085), PushString(58), Native(4), Pop, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("LeftBracket", 1), Equals, JumpIfFalse(1094), PushString(59), Native(4), Pop, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Identifier", 1), Equals, JumpIfFalse(1104), GetLocal(1), Get("value"), Instance(["value"], ["accept", "kind"], [686, 692]), Return, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Int", 1), Equals, JumpIfFalse(1114), GetLocal(1), Get("value"), Instance(["value"], ["accept"], [619]), Return, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Float", 1), Equals, JumpIfFalse(1123), PushString(60), Native(4), Pop, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("String", 1), Equals, JumpIfFalse(1133), GetLocal(1), Get("value"), Instance(["value"], ["accept"], [626]), Return, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Bool", 1), Equals, JumpIfFalse(1142), PushString(61), Native(4), Pop, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Nil", 1), Equals, JumpIfFalse(1151), PushString(62), Native(4), Pop, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("At", 1), Equals, JumpIfFalse(1160), PushSelf, Call("field", 1), Return, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Hash", 1), Equals, JumpIfFalse(1169), PushSelf, Call("native", 1), Return, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("LeftParen", 1), Equals, JumpIfFalse(1178), PushString(63), Native(4), Pop, PushString(64), Native(4), Pop, Pop, PushNil, Return, GetLocal(3), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Or", 1), Equals, JumpIfFalse(1193), GetLocal(1), GetLocal(2), Instance(["rhs", "lhs"], ["accept"], [799]), Return, GetLocal(3), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("And", 1), Equals, JumpIfFalse(1202), GetLocal(1), GetLocal(2), Instance(["rhs", "lhs"], ["accept"], [806]), Return, GetLocal(3), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("BangEqual", 1), Equals, JumpIfFalse(1211), GetLocal(1), GetLocal(2), Instance(["rhs", "lhs"], ["accept"], [806]), Return, GetLocal(3), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("BangEqual", 1), Equals, JumpIfFalse(1220), GetLocal(1), GetLocal(2), Instance(["rhs", "lhs"], ["accept"], [813]), Return, GetLocal(3), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("EqualEqual", 1), Equals, JumpIfFalse(1229), GetLocal(1), GetLocal(2), Instance(["rhs", "lhs"], ["accept"], [771]), Return, GetLocal(3), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Greater", 1), Equals, JumpIfFalse(1238), GetLocal(1), GetLocal(2), Instance(["rhs", "lhs"], ["accept"], [820]), Return, GetLocal(3), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("GreaterEqual", 1), Equals, JumpIfFalse(1247), GetLocal(1), GetLocal(2), Instance(["rhs", "lhs"], ["accept"], [827]), Return, GetLocal(3), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Less", 1), Equals, JumpIfFalse(1256), GetLocal(1), GetLocal(2), Instance(["rhs", "lhs"], ["accept"], [834]), Return, GetLocal(3), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("LessEqual", 1), Equals, JumpIfFalse(1265), GetLocal(1), GetLocal(2), Instance(["rhs", "lhs"], ["accept"], [841]), Return, GetLocal(3), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Plus", 1), Equals, JumpIfFalse(1274), GetLocal(1), GetLocal(2), Instance(["rhs", "lhs"], ["accept"], [704]), Return, GetLocal(3), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Minus", 1), Equals, JumpIfFalse(1283), GetLocal(1), GetLocal(2), Instance(["rhs", "lhs"], ["accept"], [711]), Return, GetLocal(3), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Equal", 1), Equals, JumpIfFalse(1318), GetLocal(1), Call("kind", 1), PushString(65), Equals, JumpIfFalse(1298), GetLocal(1), Get("value"), GetLocal(2), Instance(["expr", "name"], ["accept"], [732]), Return, GetLocal(1), Call("kind", 1), PushString(66), Equals, JumpIfFalse(1310), GetLocal(1), Get("lhs"), GetLocal(1), Get("field"), GetLocal(2), Instance(["rhs", "field", "lhs"], ["accept", "kind"], [859, 865]), Return, GetLocal(1), Call("kind", 1), PushString(67), Equals, JumpIfFalse(1318), PushString(68), Native(4), Pop, PushString(69), Native(4), Pop, PushNil, Return, List(0), GetField("lexer"), Call("peek", 1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("RightParen", 1), NotEquals, JumpIfFalse(1349), GetLocal(2), PushSelf, Call("expr", 1), Native(5), Pop, GetField("lexer"), Call("peek", 1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Comma", 1), Equals, JumpIfFalse(1348), PushSelf, Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Comma", 1), Call("consume", 2), Pop, Jump(1324), PushSelf, Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("RightParen", 1), Call("consume", 2), Pop, GetLocal(1), Call("kind", 1), PushString(70), Equals, JumpIfFalse(1364), GetLocal(1), Get("value"), GetLocal(2), Instance(["args", "name"], ["accept"], [739]), Return, GetLocal(1), Call("kind", 1), PushString(71), Equals, JumpIfFalse(1376), GetLocal(1), Get("field"), GetLocal(2), GetLocal(1), Get("lhs"), Instance(["lhs", "args", "name"], ["accept", "kind"], [753, 759]), Return, GetLocal(1), Call("kind", 1), PushString(72), Equals, JumpIfFalse(1384), PushString(73), Native(4), Pop, PushString(74), Native(4), Pop, Pop, PushNil, Return, PushSelf, Call("consume_identifier", 1), GetLocal(1), GetLocal(2), Instance(["field", "lhs"], ["accept", "kind"], [848, 854]), Return, Pop, PushNil, Return, GetField("lexer"), Call("peek", 1), GetLocal(2), PushNil, NotEquals, JumpIfFalse(1492), GetLocal(2), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("LeftParen", 1), Equals, JumpIfFalse(1420), PushSelf, Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("LeftParen", 1), Call("consume", 2), Pop, PushSelf, GetLocal(1), Call("call", 2), SetLocal(1), GetLocal(2), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("LeftBracket", 1), Equals, JumpIfFalse(1429), PushString(75), Native(4), Pop, GetLocal(2), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Dot", 1), Equals, JumpIfFalse(1444), PushSelf, Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Dot", 1), Call("consume", 2), Pop, PushSelf, GetLocal(1), Call("get_or_set", 2), SetLocal(1), GetLocal(2), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("LeftParen", 1), NotEquals, GetLocal(2), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("LeftBracket", 1), NotEquals, And, GetLocal(2), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Dot", 1), NotEquals, And, JumpIfFalse(1488), PushSelf, GetLocal(2), Call("infix_prec", 2), GetLocal(3), PushInt(0), Equals, JumpIfFalse(1471), GetLocal(1), Return, PushSelf, GetLocal(2), Get("kind"), Call("consume", 2), Pop, PushSelf, GetLocal(3), Call("parse_expr", 2), PushSelf, GetLocal(1), GetLocal(4), GetLocal(2), Get("kind"), Call("match_infix_token", 4), SetLocal(1), Pop, Pop, GetField("lexer"), Call("peek", 1), SetLocal(2), Jump(1401), GetLocal(1), Return, Pop, PushNil, Return, PushSelf, Call("parse_prefix", 1), GetLocal(1), PushSelf, GetField("lexer"), Call("peek", 1), Call("infix_prec", 2), Less, JumpIfFalse(1511), PushSelf, GetLocal(2), Call("parse_infix", 2), SetLocal(2), Jump(1499), GetLocal(2), Return, Pop, PushNil, Return, PushSelf, PushInt(0), Call("parse_expr", 2), Return, PushNil, Return, PushSelf, Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("LeftBrace", 1), Call("consume", 2), Pop, List(0), PushBool(false), GetLocal(2), Not, JumpIfFalse(1555), GetField("lexer"), Call("peek", 1), GetLocal(3), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("RightBrace", 1), Equals, JumpIfFalse(1542), PushBool(true), SetLocal(2), GetLocal(3), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("RightBrace", 1), NotEquals, JumpIfFalse(1553), GetLocal(1), PushSelf, Call("stmt", 1), Native(5), Pop, Pop, Jump(1529), PushSelf, Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("RightBrace", 1), Call("consume", 2), Pop, GetLocal(1), Instance(["stmts"], ["accept"], [725]), Return, Pop, Pop, PushNil, Return, GetField("lexer"), Call("peek", 1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("LeftParen", 1), NotEquals, JumpIfFalse(1576), List(0), Return, PushSelf, Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("LeftParen", 1), Call("consume", 2), Pop, List(0), GetField("lexer"), Call("peek", 1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("RightParen", 1), NotEquals, JumpIfFalse(1617), GetField("lexer"), Call("peek", 1), GetLocal(2), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Identifier", 1), Equals, JumpIfFalse(1604), PushSelf, Call("consume_identifier", 1), GetLocal(1), GetLocal(3), Native(5), Pop, Pop, GetLocal(2), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Comma", 1), Equals, JumpIfFalse(1615), PushSelf, Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Comma", 1), Call("consume", 2), Pop, Pop, Jump(1582), PushSelf, Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("RightParen", 1), Call("consume", 2), Pop, GetLocal(1), Return, Pop, PushNil, Return, PushSelf, Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Def", 1), Call("consume", 2), Pop, PushSelf, Call("consume_identifier", 1), PushSelf, Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Equal", 1), Call("consume", 2), Pop, PushSelf, Call("expr", 1), GetLocal(1), GetLocal(2), Instance(["expr", "name"], ["accept"], [697]), Return, Pop, Pop, PushNil, Return, PushSelf, Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Class", 1), Call("consume", 2), Pop, PushSelf, Call("consume_identifier", 1), PushSelf, Call("param_list", 1), PushSelf, Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("LeftBrace", 1), Call("consume", 2), Pop, List(0), GetField("lexer"), Call("peek", 1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("RightBrace", 1), NotEquals, JumpIfFalse(1688), PushSelf, Call("consume_identifier", 1), PushSelf, Call("param_list", 1), PushSelf, Call("block", 1), GetLocal(3), GetLocal(4), GetLocal(5), GetLocal(6), Instance(["block", "params", "name"], [], []), Native(5), Pop, Pop, Pop, Pop, Jump(1664), PushSelf, Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("RightBrace", 1), Call("consume", 2), Pop, GetLocal(1), GetLocal(2), GetLocal(3), Instance(["methods", "fields", "name"], ["accept"], [718]), Return, Pop, Pop, Pop, PushNil, Return, PushString(76), Native(4), Pop, PushNil, Return, PushString(77), Native(4), Pop, PushNil, Return, PushSelf, Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("While", 1), Call("consume", 2), Pop, PushSelf, Call("expr", 1), PushSelf, Call("block", 1), GetLocal(1), GetLocal(2), Instance(["block", "condition"], ["accept"], [792]), Return, Pop, Pop, PushNil, Return, PushString(78), Native(4), Pop, PushNil, Return, PushSelf, Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("At", 1), Call("consume", 2), Pop, PushSelf, Call("consume_identifier", 1), GetField("lexer"), Call("next", 1), GetLocal(2), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Equal", 1), Equals, JumpIfFalse(1755), GetLocal(1), PushSelf, Call("expr", 1), Instance(["expr", "name"], ["accept"], [640]), Return, PushString(79), Native(4), Pop, Pop, Pop, PushNil, Return, PushSelf, Call("consume_identifier", 1), PushSelf, Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("LeftParen", 1), Call("consume", 2), Pop, List(0), GetField("lexer"), Call("peek", 1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("RightParen", 1), Equals, GetLocal(3), Not, JumpIfFalse(1806), GetLocal(2), PushSelf, Call("expr", 1), Native(5), Pop, GetField("lexer"), Call("peek", 1), Get("kind"), GetLocal(4), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Comma", 1), Equals, JumpIfFalse(1797), PushSelf, Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Comma", 1), Call("consume", 2), Pop, GetLocal(4), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("RightParen", 1), Equals, JumpIfFalse(1804), PushBool(true), SetLocal(3), Pop, Jump(1776), PushSelf, Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("RightParen", 1), Call("consume", 2), Pop, GetLocal(1), GetLocal(2), Instance(["args", "name"], ["accept"], [746]), Return, Pop, Pop, Pop, PushNil, Return, GetField("lexer"), Call("peek", 1), GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("LeftBrace", 1), Equals, JumpIfFalse(1831), PushSelf, Call("block", 1), Return, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Def", 1), Equals, JumpIfFalse(1840), PushSelf, Call("stmt_def", 1), Return, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("LeftBracket", 1), Equals, JumpIfFalse(1849), PushSelf, Call("list", 1), Return, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Class", 1), Equals, JumpIfFalse(1858), PushSelf, Call("stmt_class", 1), Return, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Identifier", 1), Equals, JumpIfFalse(1891), PushSelf, Call("expr", 1), PushString(80), GetLocal(2), Print(2), Pop, GetLocal(2), Call("kind", 1), GetLocal(3), PushString(81), Equals, GetLocal(3), PushString(82), Equals, GetLocal(3), PushString(83), Equals, Or, Or, JumpIfFalse(1887), GetLocal(2), Instance(["expr"], ["accept"], [764]), Return, GetLocal(2), Return, Pop, Pop, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("If", 1), Equals, JumpIfFalse(1900), PushSelf, Call("stmt_if", 1), Return, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("While", 1), Equals, JumpIfFalse(1909), PushSelf, Call("stmt_while", 1), Return, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Return", 1), Equals, JumpIfFalse(1918), PushSelf, Call("stmt_return", 1), Return, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("At", 1), Equals, JumpIfFalse(1927), PushSelf, Call("stmt_set_field", 1), Return, GetLocal(1), Get("kind"), Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Hash", 1), Equals, JumpIfFalse(1942), PushSelf, Instance([], ["LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Less", "Greater", "Equal", "Plus", "Minus", "Slash", "Star", "Dot", "Comma", "Colon", "SemiColon", "Bang", "At", "Hash", "Class", "And", "Or", "Else", "If", "For", "Nil", "Return", "While", "Import", "True", "False", "Def", "Int", "Float", "Bool", "Str", "Identifier", "String", "Float", "BangEqual", "EqualEqual", "GreaterEqual", "LessEqual", "from_str"], [1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177]), Call("Hash", 1), Call("consume", 2), Pop, PushSelf, Call("native", 1), Instance(["expr"], ["accept"], [764]), Return, PushString(84), Native(4), Pop, Pop, PushNil, Return, List(0), GetField("lexer"), Call("peek", 1), PushNil, NotEquals, JumpIfFalse(1962), PushSelf, Call("stmt", 1), GetLocal(1), GetLocal(2), Native(5), Pop, Pop, Jump(1949), GetLocal(1), Instance(["nodes"], ["accept"], [591]), Return, Pop, PushNil, Return, Jump(2622), PushString(85), PushInt(0), PushString(86), GetLocal(3), GetField("indent"), Native(3), Less, JumpIfFalse(1988), GetLocal(4), GetField("indent"), GetLocal(3), IndexGet, Plus, SetLocal(4), GetLocal(3), PushInt(1), Plus, SetLocal(3), Jump(1972), GetField("is_last"), JumpIfFalse(1996), GetLocal(4), PushString(87), Plus, GetLocal(1), Print(2), Pop, GetField("is_last"), Not, JumpIfFalse(2005), GetLocal(4), PushString(88), Plus, GetLocal(1), Print(2), Pop, Pop, Pop, Pop, PushNil, Return, GetField("is_last"), JumpIfFalse(2016), GetField("indent"), PushString(89), Native(5), Pop, GetField("is_last"), Not, JumpIfFalse(2023), GetField("indent"), PushString(90), Native(5), Pop, PushNil, Return, GetField("indent"), Native(6), Pop, PushNil, Return, PushSelf, Call("add_indent", 1), Pop, PushInt(0), GetLocal(2), GetLocal(1), Native(3), Less, JumpIfFalse(2061), PushBool(false), SetField("is_last"), GetLocal(2), GetLocal(1), Native(3), PushInt(1), Minus, Equals, JumpIfFalse(2050), PushBool(true), SetField("is_last"), GetLocal(1), GetLocal(2), IndexGet, PushSelf, Call("accept", 2), Pop, GetLocal(2), PushInt(1), Plus, SetLocal(2), Jump(2034), PushSelf, Call("pop_indent", 1), Pop, Pop, PushNil, Return, PushString(91), Print(1), Pop, PushSelf, PushString(92), Call("print_node", 2), Pop, PushSelf, GetLocal(1), Get("nodes"), Call("loop", 2), Pop, PushString(93), Print(1), Pop, PushNil, Return, PushString(94), Native(4), Pop, PushNil, Return, PushString(95), Native(4), Pop, PushNil, Return, PushString(96), Native(4), Pop, PushNil, Return, PushSelf, PushString(97), GetLocal(1), Get("value"), PushString(98), Plus, Plus, Call("print_node", 2), Pop, PushNil, Return, PushSelf, PushString(99), GetLocal(1), Get("value"), PushString(100), Plus, Plus, Call("print_node", 2), Pop, PushNil, Return, PushSelf, PushString(101), GetLocal(1), Get("value"), PushString(102), Plus, Plus, Call("print_node", 2), Pop, PushNil, Return, PushSelf, PushString(103), GetLocal(1), Get("name"), PushString(104), Plus, Plus, Call("print_node", 2), Pop, PushBool(true), SetField("is_last"), PushSelf, Call("add_indent", 1), Pop, GetLocal(1), Get("expr"), PushSelf, Call("accept", 2), Pop, PushSelf, Call("pop_indent", 1), Pop, PushNil, Return, PushString(105), Native(4), Pop, PushNil, Return, PushString(106), Native(4), Pop, PushNil, Return, PushString(107), Native(4), Pop, PushNil, Return, PushString(108), Native(4), Pop, PushNil, Return, PushString(109), Native(4), Pop, PushNil, Return, PushSelf, PushString(110), GetLocal(1), Get("value"), PushString(111), Plus, Plus, Call("print_node", 2), Pop, PushNil, Return, PushSelf, PushString(112), GetLocal(1), Get("name"), Plus, Call("print_node", 2), Pop, PushSelf, Call("add_indent", 1), Pop, PushBool(true), SetField("is_last"), GetLocal(1), Get("expr"), PushSelf, Call("accept", 2), Pop, PushSelf, Call("pop_indent", 1), Pop, PushNil, Return, PushSelf, PushString(113), Call("print_node", 2), Pop, PushSelf, Call("add_indent", 1), Pop, PushBool(false), SetField("is_last"), GetLocal(1), Get("lhs"), PushSelf, Call("accept", 2), Pop, PushBool(true), SetField("is_last"), GetLocal(1), Get("rhs"), PushSelf, Call("accept", 2), Pop, PushSelf, Call("pop_indent", 1), Pop, PushNil, Return, PushSelf, PushString(114), GetLocal(1), Get("name"), Plus, Call("print_node", 2), Pop, PushSelf, Call("add_indent", 1), Pop, PushInt(0), PushBool(false), SetField("is_last"), GetLocal(2), GetLocal(1), Get("fields"), Native(3), Less, JumpIfFalse(2273), PushSelf, PushString(115), GetLocal(1), Get("fields"), GetLocal(2), IndexGet, Plus, Call("print_node", 2), Pop, GetLocal(2), PushInt(1), Plus, SetLocal(2), Jump(2253), PushInt(0), SetLocal(2), GetLocal(2), GetLocal(1), Get("methods"), Native(3), Less, JumpIfFalse(2320), GetLocal(2), GetLocal(1), Get("methods"), Native(3), PushInt(1), Minus, Equals, JumpIfFalse(2291), PushBool(true), SetField("is_last"), PushSelf, PushString(116), GetLocal(1), Get("methods"), GetLocal(2), IndexGet, Get("name"), Plus, Call("print_node", 2), Pop, PushSelf, Call("add_indent", 1), Pop, GetLocal(1), Get("methods"), GetLocal(2), IndexGet, Get("block"), PushSelf, Call("accept", 2), Pop, PushSelf, Call("pop_indent", 1), Pop, GetLocal(2), PushInt(1), Plus, SetLocal(2), Jump(2275), PushSelf, Call("pop_indent", 1), Pop, Pop, PushNil, Return, PushSelf, PushString(117), Call("print_node", 2), Pop, PushSelf, GetLocal(1), Get("stmts"), Call("loop", 2), Pop, PushNil, Return, PushSelf, PushString(118), GetLocal(1), Get("name"), Plus, Call("print_node", 2), Pop, PushSelf, Call("add_indent", 1), Pop, PushBool(true), SetField("is_last"), GetLocal(1), Get("expr"), PushSelf, Call("accept", 2), Pop, PushSelf, Call("pop_indent", 1), Pop, PushNil, Return, PushSelf, PushString(119), GetLocal(1), Get("name"), Plus, Call("print_node", 2), Pop, PushSelf, GetLocal(1), Get("args"), Call("loop", 2), Pop, PushNil, Return, PushSelf, PushString(120), GetLocal(1), Get("name"), Plus, Call("print_node", 2), Pop, PushSelf, GetLocal(1), Get("args"), Call("loop", 2), Pop, PushNil, Return, PushSelf, PushString(121), GetLocal(1), Get("name"), Plus, Call("print_node", 2), Pop, PushSelf, Call("add_indent", 1), Pop, PushBool(false), SetField("is_last"), PushInt(0), PushSelf, PushString(122), Call("print_node", 2), Pop, PushSelf, Call("add_indent", 1), Pop, PushBool(false), SetField("is_last"), GetLocal(2), GetLocal(1), Get("args"), Native(3), Less, JumpIfFalse(2437), GetLocal(2), GetLocal(1), Get("args"), Native(3), PushInt(1), Minus, Equals, JumpIfFalse(2425), PushBool(true), SetField("is_last"), GetLocal(1), Get("args"), GetLocal(2), IndexGet, PushSelf, Call("accept", 2), Pop, GetLocal(2), PushInt(1), Plus, SetLocal(2), Jump(2409), PushSelf, Call("pop_indent", 1), Pop, PushBool(true), SetField("is_last"), GetLocal(1), Get("lhs"), PushSelf, Call("accept", 2), Pop, PushSelf, Call("pop_indent", 1), Pop, Pop, PushNil, Return, PushSelf, PushString(123), Call("print_node", 2), Pop, PushSelf, Call("add_indent", 1), Pop, PushBool(true), SetField("is_last"), GetLocal(1), Get("expr"), PushSelf, Call("accept", 2), Pop, PushSelf, Call("pop_indent", 1), Pop, PushNil, Return, PushString(124), Native(4), Pop, PushNil, Return, PushString(125), Native(4), Pop, PushNil, Return, PushString(126), Native(4), Pop, PushNil, Return, PushSelf, PushString(127), Call("print_node", 2), Pop, PushSelf, Call("add_indent", 1), Pop, GetLocal(1), Get("condition"), PushSelf, Call("accept", 2), Pop, PushBool(true), SetField("is_last"), GetLocal(1), Get("block"), PushSelf, Call("accept", 2), Pop, PushSelf, Call("pop_indent", 1), Pop, PushNil, Return, PushString(128), Native(4), Pop, PushNil, Return, PushString(129), Native(4), Pop, PushNil, Return, PushString(130), Native(4), Pop, PushNil, Return, PushString(131), Native(4), Pop, PushNil, Return, PushString(132), Native(4), Pop, PushNil, Return, PushSelf, PushString(133), Call("print_node", 2), Pop, PushSelf, Call("add_indent", 1), Pop, PushBool(false), SetField("is_last"), GetLocal(1), Get("lhs"), PushSelf, Call("accept", 2), Pop, PushBool(true), SetField("is_last"), GetLocal(1), Get("rhs"), PushSelf, Call("accept", 2), Pop, PushSelf, Call("pop_indent", 1), Pop, PushNil, Return, PushString(134), Native(4), Pop, PushNil, Return, PushSelf, PushString(135), GetLocal(1), Get("field"), PushString(136), Plus, Plus, Call("print_node", 2), Pop, PushBool(true), SetField("is_last"), PushSelf, Call("add_indent", 1), Pop, GetLocal(1), Get("lhs"), PushSelf, Call("accept", 2), Pop, PushSelf, Call("pop_indent", 1), Pop, PushNil, Return, PushSelf, PushString(137), GetLocal(1), Get("field"), PushString(138), Plus, Plus, Call("print_node", 2), Pop, PushSelf, Call("add_indent", 1), Pop, PushBool(false), SetField("is_last"), GetLocal(1), Get("lhs"), PushSelf, Call("accept", 2), Pop, PushBool(true), SetField("is_last"), GetLocal(1), Get("rhs"), PushSelf, Call("accept", 2), Pop, PushSelf, Call("pop_indent", 1), Pop, PushNil, Return, Jump(2623), Jump(2624), Jump(2625), Jump(3622), PushString(139), Print(1), Pop, List(0), SetField("code"), List(0), SetField("strings"), List(0), List(1), SetField("variables"), PushInt(0), SetField("depth"), List(0), SetField("classes"), PushNil, SetField("current_fields"), PushNil, SetField("current_class_name"), PushNil, Return, PushInt(0), GetLocal(2), GetField("classes"), Native(3), Less, JumpIfFalse(2668), GetLocal(1), GetField("classes"), GetLocal(2), IndexGet, Get("name"), Equals, JumpIfFalse(2663), GetField("classes"), GetLocal(2), IndexGet, Return, GetLocal(2), PushInt(1), Plus, SetLocal(2), Jump(2647), PushNil, Return, Pop, PushNil, Return, GetField("code"), GetLocal(1), Native(5), Pop, PushNil, Return, GetField("variables"), List(0), Native(5), Pop, GetField("depth"), PushInt(1), Plus, SetField("depth"), PushNil, Return, GetField("variables"), Native(6), GetField("depth"), PushInt(1), Minus, SetField("depth"), Pop, PushNil, Return, GetField("depth"), PushInt(1), Plus, SetField("depth"), PushNil, Return, GetField("variables"), Native(6), GetLocal(1), Native(3), PushInt(0), List(0), GetLocal(3), GetLocal(2), Less, JumpIfFalse(2743), GetLocal(1), GetLocal(3), IndexGet, Get("depth"), GetField("depth"), Equals, JumpIfFalse(2725), PushSelf, PushString(140), Call("push_code", 2), Pop, GetLocal(1), GetLocal(3), IndexGet, Get("depth"), GetField("depth"), NotEquals, JumpIfFalse(2738), GetLocal(4), GetLocal(1), GetLocal(3), IndexGet, Native(5), Pop, GetLocal(3), PushInt(1), Plus, SetLocal(3), Jump(2710), GetField("depth"), PushInt(1), Minus, SetField("depth"), GetField("variables"), GetLocal(4), Native(5), Pop, Pop, Pop, Pop, Pop, PushNil, Return, GetField("variables"), GetField("variables"), Native(3), PushInt(1), Minus, IndexGet, PushInt(0), PushNil, GetLocal(3), GetLocal(2), Native(3), Less, JumpIfFalse(2789), GetLocal(2), GetLocal(3), IndexGet, Get("name"), GetLocal(1), Equals, JumpIfFalse(2784), PushString(141), GetLocal(1), Plus, PushString(142), Plus, Native(4), Pop, GetLocal(3), PushInt(1), Plus, SetLocal(3), Jump(2765), PushString(143), Print(1), Pop, GetLocal(2), GetLocal(1), GetField("depth"), GetLocal(2), Native(3), Instance(["stack_pos", "depth", "name"], [], []), Native(5), Pop, Pop, Pop, Pop, PushNil, Return, GetField("variables"), GetField("variables"), Native(3), PushInt(1), Minus, IndexGet, PushInt(0), GetLocal(3), GetLocal(2), Native(3), Less, JumpIfFalse(2834), GetLocal(2), GetLocal(3), IndexGet, Get("name"), GetLocal(1), Equals, JumpIfFalse(2829), GetLocal(2), GetLocal(3), IndexGet, Get("stack_pos"), Return, GetLocal(3), PushInt(1), Plus, SetLocal(3), Jump(2812), PushNil, Return, Pop, Pop, PushNil, Return, PushInt(0), GetLocal(2), GetLocal(1), Native(3), Less, JumpIfFalse(2857), GetLocal(1), GetLocal(2), IndexGet, PushSelf, Call("accept", 2), Pop, GetLocal(2), PushInt(1), Plus, SetLocal(2), Jump(2841), Pop, PushNil, Return, GetLocal(1), PushString(144), Equals, JumpIfFalse(2868), PushInt(0), PushInt(1), List(2), Return, GetLocal(1), PushString(145), Equals, JumpIfFalse(2876), PushInt(1), PushInt(1), List(2), Return, GetLocal(1), PushString(146), Equals, JumpIfFalse(2884), PushInt(2), PushInt(1), List(2), Return, GetLocal(1), PushString(147), Equals, JumpIfFalse(2892), PushInt(3), PushInt(1), List(2), Return, GetLocal(1), PushString(148), Equals, JumpIfFalse(2900), PushInt(4), PushInt(1), List(2), Return, GetLocal(1), PushString(149), Equals, JumpIfFalse(2908), PushInt(5), PushInt(2), List(2), Return, GetLocal(1), PushString(150), Equals, JumpIfFalse(2916), PushInt(6), PushInt(1), List(2), Return, PushString(151), GetLocal(1), Plus, Native(4), Pop, PushNil, Return, PushSelf, Call("begin_scope", 1), Pop, PushSelf, GetLocal(1), Get("nodes"), Call("compile_list", 2), Pop, PushSelf, Call("end_scope", 1), Pop, PushNil, Return, PushString(152), Native(4), Pop, PushNil, Return, PushString(153), Native(4), Pop, PushNil, Return, PushString(154), Native(4), Pop, PushNil, Return, PushSelf, PushString(155), GetLocal(1), Get("value"), Native(1), Plus, PushString(156), Plus, Call("push_code", 2), Pop, PushNil, Return, PushSelf, PushString(157), GetField("strings"), Native(3), Native(1), Plus, PushString(158), Plus, Call("push_code", 2), Pop, GetField("strings"), GetLocal(1), Get("value"), Native(5), Pop, PushNil, Return, PushSelf, PushString(159), GetLocal(1), Get("value"), PushString(160), Plus, Plus, Call("push_code", 2), Pop, PushNil, Return, GetLocal(1), Get("expr"), PushSelf, Call("accept", 2), Pop, PushSelf, PushString(161), GetLocal(1), Get("name"), PushString(162), Plus, Plus, Call("push_code", 2), Pop, PushNil, Return, PushString(163), Native(4), Pop, PushNil, Return, PushString(164), Native(4), Pop, PushNil, Return, PushString(165), Native(4), Pop, PushNil, Return, PushString(166), Native(4), Pop, PushNil, Return, PushString(167), Native(4), Pop, PushNil, Return, PushSelf, GetLocal(1), Get("value"), Call("get_local", 2), GetLocal(2), PushNil, NotEquals, JumpIfFalse(3049), PushSelf, PushString(168), GetLocal(2), Native(1), Plus, PushString(169), Plus, Call("push_code", 2), Pop, GetLocal(2), PushNil, Equals, JumpIfFalse(3056), PushString(170), Native(4), Pop, Pop, PushNil, Return, GetLocal(1), Get("expr"), PushSelf, Call("accept", 2), Pop, PushSelf, GetLocal(1), Get("name"), Call("add_local", 2), Pop, PushNil, Return, GetLocal(1), Get("lhs"), PushSelf, Call("accept", 2), Pop, GetLocal(1), Get("rhs"), PushSelf, Call("accept", 2), Pop, PushSelf, PushString(171), Call("push_code", 2), Pop, PushNil, Return, GetLocal(1), Get("name"), SetField("current_class_name"), GetLocal(1), Get("fields"), SetField("current_fields"), GetField("code"), Native(3), PushSelf, PushString(172), Call("push_code", 2), Pop, PushSelf, GetLocal(1), Get("name"), Call("find_class", 2), PushNil, NotEquals, JumpIfFalse(3114), PushString(173), GetLocal(1), Get("name"), PushString(174), Plus, Plus, Native(4), Pop, List(0), PushInt(0), GetLocal(4), GetLocal(1), Get("methods"), Native(3), Less, JumpIfFalse(3183), PushSelf, Call("begin_method", 1), Pop, GetLocal(1), Get("methods"), GetLocal(4), IndexGet, PushInt(0), GetLocal(6), GetLocal(5), Get("params"), Native(3), Less, JumpIfFalse(3148), PushSelf, GetLocal(5), Get("params"), GetLocal(6), IndexGet, Call("add_local", 2), Pop, GetLocal(6), PushInt(1), Plus, SetLocal(6), Jump(3130), GetField("code"), Native(3), GetLocal(5), Get("block"), PushSelf, Call("accept", 2), Pop, GetLocal(5), Get("name"), GetLocal(7), Instance(["code_start", "name"], [], []), GetLocal(3), GetLocal(8), Native(5), Pop, PushSelf, PushString(175), Call("push_code", 2), Pop, PushSelf, PushString(176), Call("push_code", 2), Pop, GetLocal(4), PushInt(1), Plus, SetLocal(4), PushSelf, Call("end_method", 1), Pop, Pop, Pop, Pop, Pop, Jump(3116), GetField("code"), Native(3), GetField("code"), GetLocal(2), PushString(177), GetLocal(5), Native(1), Plus, PushString(178), Plus, IndexSet, PushNil, SetField("current_class_name"), PushNil, SetField("current_fields"), GetLocal(1), Get("name"), GetLocal(1), Get("fields"), GetLocal(3), Instance(["methods", "fields", "name"], [], []), GetField("classes"), GetLocal(6), Native(5), Pop, Pop, Pop, Pop, Pop, Pop, PushNil, Return, PushSelf, Call("begin_scope", 1), Pop, PushSelf, GetLocal(1), Get("stmts"), Call("compile_list", 2), Pop, PushSelf, Call("end_scope", 1), Pop, PushNil, Return, PushSelf, GetLocal(1), Get("name"), Call("get_local", 2), GetLocal(2), PushNil, Equals, JumpIfFalse(3242), PushString(179), GetLocal(1), Get("name"), Plus, Native(4), Pop, GetLocal(1), Get("expr"), PushSelf, Call("accept", 2), Pop, PushSelf, PushString(180), GetLocal(2), Native(1), Plus, PushString(181), Plus, Call("push_code", 2), Pop, Pop, PushNil, Return, PushSelf, GetLocal(1), Get("name"), Call("find_class", 2), GetLocal(2), PushNil, Equals, JumpIfFalse(3273), PushString(182), GetLocal(1), Get("name"), Plus, Native(4), Pop, GetLocal(2), Get("fields"), Native(3), GetLocal(1), Get("args"), Native(3), NotEquals, JumpIfFalse(3284), PushString(183), Native(4), Pop, List(0), GetLocal(2), Get("fields"), Native(3), PushInt(1), Minus, GetLocal(4), PushInt(0), GreaterEqual, JumpIfFalse(3306), GetLocal(3), GetLocal(2), Get("fields"), GetLocal(4), IndexGet, Native(5), Pop, GetLocal(4), PushInt(1), Minus, SetLocal(4), Jump(3290), List(0), List(0), PushInt(0), SetLocal(4), GetLocal(4), GetLocal(2), Get("methods"), Native(3), Less, JumpIfFalse(3337), GetLocal(5), GetLocal(2), Get("methods"), GetLocal(4), IndexGet, Get("name"), Native(5), Pop, GetLocal(6), GetLocal(2), Get("methods"), GetLocal(4), IndexGet, Get("code_start"), Native(5), Pop, GetLocal(4), PushInt(1), Plus, SetLocal(4), Jump(3310), PushSelf, GetLocal(1), Get("args"), Call("compile_list", 2), Pop, PushSelf, PushString(184), GetLocal(3), Native(1), Plus, PushString(185), Plus, GetLocal(5), Native(1), Plus, PushString(186), Plus, GetLocal(6), Native(1), Plus, PushString(187), Plus, Call("push_code", 2), Pop, Pop, Pop, Pop, Pop, Pop, PushNil, Return, PushSelf, GetLocal(1), Get("name"), Call("native", 2), GetLocal(1), Get("name"), PushString(188), NotEquals, GetLocal(1), Get("args"), Native(3), GetLocal(2), PushInt(1), IndexGet, NotEquals, And, JumpIfFalse(3388), PushString(189), Native(4), Pop, PushSelf, GetLocal(1), Get("args"), Call("compile_list", 2), Pop, GetLocal(1), Get("name"), PushString(190), Equals, JumpIfFalse(3409), PushSelf, PushString(191), GetLocal(1), Get("args"), Native(3), Native(1), Plus, PushString(192), Plus, Call("push_code", 2), Pop, GetLocal(1), Get("name"), PushString(193), NotEquals, JumpIfFalse(3425), PushSelf, PushString(194), GetLocal(2), PushInt(1), IndexGet, Native(1), Plus, PushString(195), Plus, Call("push_code", 2), Pop, Pop, PushNil, Return, GetLocal(1), Get("lhs"), PushNil, NotEquals, JumpIfFalse(3438), GetLocal(1), Get("lhs"), PushSelf, Call("accept", 2), Pop, GetLocal(1), Get("lhs"), PushNil, Equals, JumpIfFalse(3447), PushSelf, PushString(196), Call("push_code", 2), Pop, PushSelf, GetLocal(1), Get("args"), Call("compile_list", 2), Pop, PushSelf, PushString(197), GetLocal(1), Get("name"), PushString(198), Plus, GetLocal(1), Get("args"), Native(3), PushInt(1), Plus, Native(1), Plus, PushString(199), Plus, Plus, Call("push_code", 2), Pop, PushNil, Return, GetLocal(1), Get("expr"), PushSelf, Call("accept", 2), Pop, PushSelf, PushString(200), Call("push_code", 2), Pop, PushNil, Return, PushString(201), Native(4), Pop, PushNil, Return, PushString(202), Native(4), Pop, PushNil, Return, PushString(203), Native(4), Pop, PushNil, Return, GetField("code"), Native(3), GetLocal(1), Get("condition"), PushSelf, Call("accept", 2), Pop, GetField("code"), Native(3), PushSelf, PushString(204), Call("push_code", 2), Pop, GetLocal(1), Get("block"), PushSelf, Call("accept", 2), Pop, PushSelf, PushString(205), GetLocal(2), Native(1), Plus, PushString(206), Plus, Call("push_code", 2), Pop, GetField("code"), GetLocal(3), PushString(207), GetField("code"), Native(3), Native(1), Plus, PushString(208), Plus, IndexSet, Pop, Pop, PushNil, Return, PushString(209), Native(4), Pop, PushNil, Return, PushString(210), Native(4), Pop, PushNil, Return, PushString(211), Native(4), Pop, PushNil, Return, PushString(212), Native(4), Pop, PushNil, Return, PushString(213), Native(4), Pop, PushNil, Return, GetLocal(1), Get("lhs"), PushSelf, Call("accept", 2), Pop, GetLocal(1), Get("rhs"), PushSelf, Call("accept", 2), Pop, PushSelf, PushString(214), Call("push_code", 2), Pop, PushNil, Return, PushString(215), Native(4), Pop, PushNil, Return, GetLocal(1), Get("lhs"), PushSelf, Call("accept", 2), Pop, PushSelf, PushString(216), GetLocal(1), Get("field"), PushString(217), Plus, Plus, Call("push_code", 2), Pop, PushNil, Return, GetLocal(1), Get("lhs"), PushSelf, Call("accept", 2), Pop, GetLocal(1), Get("rhs"), PushSelf, Call("accept", 2), Pop, PushSelf, PushString(218), GetLocal(1), Get("field"), PushString(219), Plus, Plus, Call("push_code", 2), Pop, PushNil, Return, PushString(220), Native(2), PushString(221), GetLocal(0), Print(2), Pop, GetLocal(0), PushInt(0), Instance(["p", "code"], ["whitespace", "is_done", "letter", "digit", "advance", "identifier", "number", "string", "single_char", "next"], [242, 260, 267, 300, 333, 344, 387, 441, 485, 509]), GetLocal(1), PushNil, Instance(["peek_item", "item"], ["next", "peek"], [564, 579]), SetLocal(1), GetLocal(1), Instance(["lexer"], ["consume", "consume_identifier", "infix_prec", "field", "parse_prefix", "match_infix_token", "call", "get_or_set", "parse_infix", "parse_expr", "expr", "block", "param_list", "stmt_def", "stmt_class", "list", "stmt_if", "stmt_while", "stmt_return", "stmt_set_field", "native", "stmt", "parse_root"], [878, 900, 921, 1045, 1065, 1184, 1323, 1390, 1399, 1497, 1516, 1522, 1567, 1627, 1649, 1703, 1708, 1713, 1730, 1735, 1762, 1820, 1948]), GetLocal(2), Call("parse_root", 1), List(0), PushBool(true), PushString(222), PushString(223), PushString(224), Instance(["id3", "id2", "id1", "is_last", "indent"], ["print_node", "add_indent", "pop_indent", "loop", "visitAstRoot", "visitAstNeg", "visitAstNot", "visitAstFloat", "visitAstInt", "visitAstString", "visitAstGetField", "visitAstSetField", "visitAstList", "visitAstIndex", "visitAstIndexSet", "visitAstBool", "visitAstNil", "visitAstGetVar", "visitAstDef", "visitAstPlus", "visitAstClass", "visitAstBlock", "visitAstReassign", "visitAstInstance", "visitAstNative", "visitAstMethod", "visitAstPop", "visitAstEqualEqual", "visitAstIf", "visitAstReturn", "visitAstWhile", "visitAstOr", "visitAstAnd", "visitAstBangEqual", "visitAstGreater", "visitAstGreaterEqual", "visitAstLess", "visitAstLessEqual", "visitAstGet", "visitAstSet"], [1969, 2010, 2025, 2030, 2067, 2084, 2089, 2094, 2099, 2110, 2121, 2132, 2156, 2161, 2166, 2171, 2176, 2181, 2192, 2214, 2240, 2326, 2337, 2359, 2373, 2387, 2453, 2472, 2477, 2482, 2487, 2511, 2516, 2521, 2526, 2531, 2536, 2562, 2567, 2591]), GetLocal(3), GetLocal(4), Call("accept", 2), Pop, PushNil, PushNil, PushNil, PushNil, PushNil, PushNil, PushNil, Instance(["current_class_name", "current_fields", "classes", "depth", "variables", "strings", "code"], ["init", "find_class", "push_code", "begin_method", "end_method", "begin_scope", "end_scope", "add_local", "get_local", "compile_list", "native", "visitAstRoot", "visitAstNeg", "visitAstNot", "visitAstFloat", "visitAstInt", "visitAstString", "visitAstGetField", "visitAstSetField", "visitAstList", "visitAstIndex", "visitAstIndexSet", "visitAstBool", "visitAstNil", "visitAstGetVar", "visitAstDef", "visitAstPlus", "visitAstClass", "visitAstBlock", "visitAstReassign", "visitAstInstance", "visitAstNative", "visitAstMethod", "visitAstPop", "visitAstEqualEqual", "visitAstIf", "visitAstReturn", "visitAstWhile", "visitAstOr", "visitAstAnd", "visitAstBangEqual", "visitAstGreater", "visitAstGreaterEqual", "visitAstLess", "visitAstLessEqual", "visitAstGet", "visitAstSet"], [2626, 2646, 2673, 2679, 2689, 2698, 2704, 2757, 2805, 2840, 2860, 2923, 2936, 2941, 2946, 2951, 2963, 2980, 2991, 3007, 3012, 3017, 3022, 3027, 3032, 3059, 3071, 3087, 3215, 3228, 3259, 3368, 3428, 3472, 3483, 3488, 3493, 3498, 3539, 3544, 3549, 3554, 3559, 3564, 3580, 3585, 3601]), GetLocal(5), Call("init", 1), Pop, GetLocal(3), GetLocal(5), Call("accept", 2), Pop, PushString(225), GetLocal(5), Get("code"), Print(2), Pop, Pop, Pop, Pop, Pop, Pop, Pop]

started VM!
input:         class foo(i, j) {
            bar(a) {
                #print("BAR")
                #print(#to_string(@i))
                @i = 9
            }
        }

        def f = foo(1, 5)
        f.i = 2
        #print(#to_string(f.i))
        f.i = 3

        f.bar(4)

        #print(#to_string(f.i))

todo: should pop if method instance or get {rhs: {value: 2}, lhs: {value: f}, field: i}
todo: should pop if method instance or get {lhs: {value: f}, rhs: {value: 3}, field: i}
todo: should pop if method instance or get {name: bar, lhs: {value: f}, args: [{value: 4}]}
visiting root
└── Root
    ├── Class: foo
    │   ├── Field: i
    │   ├── Field: j
    │   └── Method: bar
    │       └── Block
    │           ├── Pop
    │           │   └── Native: print
    │           │       └── String("BAR")
    │           ├── Pop
    │           │   └── Native: print
    │           │       └── Native: to_string
    │           │           └── Field(i)
    │           └── SetField(i)
    │               └── Int(9)
    ├── Def: f
    │   └── Instance: foo
    │       ├── Int(1)
    │       └── Int(5)
    ├── Set(i)
    │   ├── GetVar(f)
    │   └── Int(2)
    ├── Pop
    │   └── Native: print
    │       └── Native: to_string
    │           └── Get(i)
    │               └── GetVar(f)
    ├── Set(i)
    │   ├── GetVar(f)
    │   └── Int(3)
    ├── Pop
    │   └── MethodCall: bar
    │       ├── Args
    │       │   └── Int(4)
    │       └── GetVar(f)
    └── Pop
        └── Native: print
            └── Native: to_string
                └── Get(i)
                    └── GetVar(f)
done visiting root
init compiler
the wierd ll thing probably should not be here
the wierd ll thing probably should not be here
Bytecode: [Jump(12), PushString(0), Print(1), Pop, GetField(i), Native(1), Print(1), Pop, PushInt(9), SetField(i), PushNil, Return, PushInt(1), PushInt(5), Instance([j, i], [bar], [1]), GetLocal(0), PushInt(2), Set(i), GetLocal(0), Get(i), Native(1), Print(1), Pop, GetLocal(0), PushInt(3), Set(i), GetLocal(0), PushInt(4), Call(bar, 2), Pop, GetLocal(0), Get(i), Native(1), Print(1), Pop, Pop]


Execution time: 111ms
run file
└── Root
    ├── Class: foo
    │   ├── Field: i
    │   ├── Field: j
    │   └── Method: bar
    │       └── Param: a
    │       └── Block
    │           ├── Pop
    │           │   └── Native: print
    │           │       └── String("BAR")
    │           ├── Pop
    │           │   └── Native: print
    │           │       └── Native: to_string
    │           │           └── Field("i")
    │           └── SetField(i)
    │               └── Int(9)
    ├── Def: f
    │   └── Call: foo
    │       ├── Int(1)
    │       └── Int(5)
    ├── Set(i)
    │   ├── GetVar(f)
    │   └── Int(2)
    ├── Pop
    │   └── Native: print
    │       └── Native: to_string
    │           └── Get(i)
    │               └── GetVar(f)
    ├── Set(i)
    │   ├── GetVar(f)
    │   └── Int(3)
    ├── Pop
    │   └── Method: bar
    │       ├── Int(4)
    │       └── GetVar(f)
    └── Pop
        └── Native: print
            └── Native: to_string
                └── Get(i)
                    └── GetVar(f)

Bytecode: [Jump(12), PushString(0), Print(1), Pop, GetField("i"), Native(1), Print(1), Pop, PushInt(9), SetField("i"), PushNil, Return, PushInt(1), PushInt(5), Instance(["j", "i"], ["bar"], [1]), GetLocal(0), PushInt(2), Set("i"), GetLocal(0), Get("i"), Native(1), Print(1), Pop, GetLocal(0), PushInt(3), Set("i"), GetLocal(0), PushInt(4), Call("bar", 2), Pop, GetLocal(0), Get("i"), Native(1), Print(1), Pop, Pop]

started VM!
2
BAR
3
9


Execution time: 1ms
