import { "lexer.lum", "parser.lum", "ast_printer.lum", "compiler.lum", "import_resolver.lum" }

def file = #args(0)

#print("compiling file: ", file)

def input = #read_file(file)

def lexer = Lexer(input, 0)
lexer = Peekable(lexer, nil)

def parser = Parser(lexer, file)
def root = parser.parse_root()

def import_resolver = ImportResolver()
root.accept(import_resolver)

def printer = AstPrinter([], true)

if true == false {
    root.accept(printer)
}

def compiler = Compiler(nil, nil, nil, nil, nil, nil, nil)
compiler.init()
root.accept(compiler)

def res = [#len(compiler.strings)]
#print("first")
res = res + compiler.strings
#print("first2")
res = res + compiler.code


#write_file("lum_out.l", compiler.code)
#write_file("lum_out_strings.l", compiler.strings)
#write_file("test.l", res)
